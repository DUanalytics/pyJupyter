2023-03-12 16:26:10,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 16:26:10,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 16:26:10,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 16:26:10,355:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 16:26:18,342:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 16:26:23,054:INFO:PyCaret RegressionExperiment
2023-03-12 16:26:23,054:INFO:Logging name: reg-default-name
2023-03-12 16:26:23,054:INFO:ML Usecase: MLUsecase.REGRESSION
2023-03-12 16:26:23,054:INFO:version 3.0.0.rc4
2023-03-12 16:26:23,054:INFO:Initializing setup()
2023-03-12 16:26:23,054:INFO:self.USI: dbfe
2023-03-12 16:26:23,054:INFO:self.variable_keys: {'html_param', 'variable_keys', 'logging_param', 'fold_groups_param', 'y', '_all_models_internal', 'log_plots_param', 'exp_name_log', 'X_test', 'X_train', 'transform_target_param', 'display_container', '_available_plots', '_ml_usecase', '_all_metrics', '_gpu_n_jobs_param', 'data', 'fold_shuffle_param', 'pipeline', 'exp_id', 'gpu_param', 'y_test', 'target_param', 'y_train', 'fold_generator', 'n_jobs_param', 'idx', 'X', 'transform_target_method_param', '_all_models', 'memory', 'master_model_container', 'USI', 'seed'}
2023-03-12 16:26:23,054:INFO:Checking environment
2023-03-12 16:26:23,054:INFO:python_version: 3.9.13
2023-03-12 16:26:23,054:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-03-12 16:26:23,054:INFO:machine: AMD64
2023-03-12 16:26:23,054:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-12 16:26:23,054:INFO:Memory: svmem(total=17043402752, available=10069708800, percent=40.9, used=6973693952, free=10069708800)
2023-03-12 16:26:23,055:INFO:Physical Core: 2
2023-03-12 16:26:23,055:INFO:Logical Core: 4
2023-03-12 16:26:23,055:INFO:Checking libraries
2023-03-12 16:26:23,055:INFO:System:
2023-03-12 16:26:23,055:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-03-12 16:26:23,055:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-03-12 16:26:23,055:INFO:   machine: Windows-10-10.0.19044-SP0
2023-03-12 16:26:23,055:INFO:PyCaret required dependencies:
2023-03-12 16:26:23,055:INFO:                 pip: 22.2.2
2023-03-12 16:26:23,055:INFO:          setuptools: 63.4.1
2023-03-12 16:26:23,055:INFO:             pycaret: 3.0.0rc4
2023-03-12 16:26:23,055:INFO:             IPython: 7.31.1
2023-03-12 16:26:23,055:INFO:          ipywidgets: 7.6.5
2023-03-12 16:26:23,055:INFO:                tqdm: 4.64.1
2023-03-12 16:26:23,055:INFO:               numpy: 1.21.5
2023-03-12 16:26:23,055:INFO:              pandas: 1.4.4
2023-03-12 16:26:23,055:INFO:              jinja2: 2.11.3
2023-03-12 16:26:23,055:INFO:               scipy: 1.9.1
2023-03-12 16:26:23,056:INFO:              joblib: 1.2.0
2023-03-12 16:26:23,056:INFO:             sklearn: 1.1.3
2023-03-12 16:26:23,056:INFO:                pyod: 1.0.6
2023-03-12 16:26:23,056:INFO:            imblearn: 0.9.1
2023-03-12 16:26:23,056:INFO:   category_encoders: 2.5.1.post0
2023-03-12 16:26:23,056:INFO:            lightgbm: 3.3.3
2023-03-12 16:26:23,056:INFO:               numba: 0.55.1
2023-03-12 16:26:23,056:INFO:            requests: 2.28.1
2023-03-12 16:26:23,056:INFO:          matplotlib: 3.5.2
2023-03-12 16:26:23,056:INFO:          scikitplot: 0.3.7
2023-03-12 16:26:23,056:INFO:         yellowbrick: 1.5
2023-03-12 16:26:23,056:INFO:              plotly: 5.9.0
2023-03-12 16:26:23,056:INFO:             kaleido: 0.2.1
2023-03-12 16:26:23,056:INFO:         statsmodels: 0.13.2
2023-03-12 16:26:23,056:INFO:              sktime: 0.14.1
2023-03-12 16:26:23,056:INFO:               tbats: 1.1.1
2023-03-12 16:26:23,056:INFO:            pmdarima: 1.8.4
2023-03-12 16:26:23,056:INFO:              psutil: 5.9.0
2023-03-12 16:26:23,056:INFO:PyCaret optional dependencies:
2023-03-12 16:26:23,077:INFO:                shap: Not installed
2023-03-12 16:26:23,077:INFO:           interpret: Not installed
2023-03-12 16:26:23,078:INFO:                umap: Not installed
2023-03-12 16:26:23,078:INFO:    pandas_profiling: 3.5.0
2023-03-12 16:26:23,078:INFO:  explainerdashboard: Not installed
2023-03-12 16:26:23,078:INFO:             autoviz: Not installed
2023-03-12 16:26:23,078:INFO:           fairlearn: Not installed
2023-03-12 16:26:23,078:INFO:             xgboost: Not installed
2023-03-12 16:26:23,078:INFO:            catboost: Not installed
2023-03-12 16:26:23,078:INFO:              kmodes: Not installed
2023-03-12 16:26:23,078:INFO:             mlxtend: 0.21.0
2023-03-12 16:26:23,078:INFO:       statsforecast: Not installed
2023-03-12 16:26:23,078:INFO:        tune_sklearn: Not installed
2023-03-12 16:26:23,078:INFO:                 ray: Not installed
2023-03-12 16:26:23,078:INFO:            hyperopt: Not installed
2023-03-12 16:26:23,078:INFO:              optuna: Not installed
2023-03-12 16:26:23,078:INFO:               skopt: Not installed
2023-03-12 16:26:23,078:INFO:              mlflow: Not installed
2023-03-12 16:26:23,078:INFO:              gradio: Not installed
2023-03-12 16:26:23,078:INFO:             fastapi: Not installed
2023-03-12 16:26:23,078:INFO:             uvicorn: Not installed
2023-03-12 16:26:23,078:INFO:              m2cgen: Not installed
2023-03-12 16:26:23,078:INFO:           evidently: Not installed
2023-03-12 16:26:23,078:INFO:                nltk: 3.7
2023-03-12 16:26:23,078:INFO:            pyLDAvis: Not installed
2023-03-12 16:26:23,078:INFO:              gensim: 4.1.2
2023-03-12 16:26:23,078:INFO:               spacy: Not installed
2023-03-12 16:26:23,078:INFO:           wordcloud: 1.8.2.2
2023-03-12 16:26:23,079:INFO:            textblob: Not installed
2023-03-12 16:26:23,079:INFO:               fugue: Not installed
2023-03-12 16:26:23,079:INFO:           streamlit: 1.15.2
2023-03-12 16:26:23,079:INFO:             prophet: Not installed
2023-03-12 16:26:23,079:INFO:None
2023-03-12 16:26:23,079:INFO:Set up data.
2023-03-12 16:26:23,086:INFO:Set up train/test split.
2023-03-12 16:26:23,090:INFO:Set up index.
2023-03-12 16:26:23,091:INFO:Set up folding strategy.
2023-03-12 16:26:23,091:INFO:Assigning column types.
2023-03-12 16:26:23,094:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-12 16:26:23,094:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-12 16:26:23,099:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-12 16:26:23,104:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:23,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:23,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:23,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,189:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,206:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,320:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-03-12 16:26:25,324:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,329:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,438:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,443:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,553:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-03-12 16:26:25,562:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,620:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,675:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,733:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,779:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-03-12 16:26:25,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:25,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:25,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:26,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-12 16:26:26,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,007:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-12 16:26:26,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:26,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-03-12 16:26:26,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,253:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-03-12 16:26:26,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:26,485:INFO:Preparing preprocessing pipeline...
2023-03-12 16:26:26,486:INFO:Set up simple imputation.
2023-03-12 16:26:26,489:INFO:Set up encoding of ordinal features.
2023-03-12 16:26:26,491:INFO:Set up encoding of categorical features.
2023-03-12 16:26:26,675:INFO:Finished creating preprocessing pipeline.
2023-03-12 16:26:26,686:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(...ker'],
                                    transformer=OrdinalEncoder(cols=['sex',
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-03-12 16:26:26,687:INFO:Creating final display dataframe.
2023-03-12 16:26:27,237:INFO:Setup display_container:                  Description             Value
0                 Session id              6311
1                     Target           charges
2                Target type        Regression
3                 Data shape        (1338, 10)
4           Train data shape         (936, 10)
5            Test data shape         (402, 10)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation              mode
13  Maximum one-hot encoding                25
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18                   Use GPU             False
19            Log Experiment             False
20           Experiment Name  reg-default-name
21                       USI              dbfe
2023-03-12 16:26:27,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:27,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:27,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:27,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:26:27,506:INFO:setup() successfully completed in 4.45s...............
2023-03-12 16:28:14,910:INFO:Initializing compare_models()
2023-03-12 16:28:14,910:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-03-12 16:28:14,910:INFO:Checking exceptions
2023-03-12 16:28:14,915:INFO:Preparing display monitor
2023-03-12 16:28:14,974:INFO:Initializing Linear Regression
2023-03-12 16:28:14,975:INFO:Total runtime is 1.6689300537109375e-05 minutes
2023-03-12 16:28:14,983:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:14,984:INFO:Initializing create_model()
2023-03-12 16:28:14,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:14,984:INFO:Checking exceptions
2023-03-12 16:28:14,984:INFO:Importing libraries
2023-03-12 16:28:14,984:INFO:Copying training dataset
2023-03-12 16:28:14,990:INFO:Defining folds
2023-03-12 16:28:14,990:INFO:Declaring metric variables
2023-03-12 16:28:14,996:INFO:Importing untrained model
2023-03-12 16:28:15,004:INFO:Linear Regression Imported successfully
2023-03-12 16:28:15,017:INFO:Starting cross validation
2023-03-12 16:28:15,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:25,130:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:246: UserWarning: Persisting input arguments took 1.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-03-12 16:28:25,131:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py:246: UserWarning: Persisting input arguments took 1.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_transform(transformer, X)

2023-03-12 16:28:25,693:INFO:Calculating mean and std
2023-03-12 16:28:25,694:INFO:Creating metrics dataframe
2023-03-12 16:28:25,697:INFO:Uploading results into container
2023-03-12 16:28:25,698:INFO:Uploading model into container now
2023-03-12 16:28:25,699:INFO:master_model_container: 1
2023-03-12 16:28:25,699:INFO:display_container: 2
2023-03-12 16:28:25,699:INFO:LinearRegression(n_jobs=-1)
2023-03-12 16:28:25,699:INFO:create_model() successfully completed......................................
2023-03-12 16:28:25,782:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:25,782:INFO:Creating metrics dataframe
2023-03-12 16:28:25,790:INFO:Initializing Lasso Regression
2023-03-12 16:28:25,790:INFO:Total runtime is 0.18027120033899943 minutes
2023-03-12 16:28:25,794:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:25,795:INFO:Initializing create_model()
2023-03-12 16:28:25,795:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:25,795:INFO:Checking exceptions
2023-03-12 16:28:25,795:INFO:Importing libraries
2023-03-12 16:28:25,796:INFO:Copying training dataset
2023-03-12 16:28:25,807:INFO:Defining folds
2023-03-12 16:28:25,807:INFO:Declaring metric variables
2023-03-12 16:28:25,813:INFO:Importing untrained model
2023-03-12 16:28:25,819:INFO:Lasso Regression Imported successfully
2023-03-12 16:28:25,827:INFO:Starting cross validation
2023-03-12 16:28:25,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:26,310:INFO:Calculating mean and std
2023-03-12 16:28:26,311:INFO:Creating metrics dataframe
2023-03-12 16:28:26,316:INFO:Uploading results into container
2023-03-12 16:28:26,316:INFO:Uploading model into container now
2023-03-12 16:28:26,316:INFO:master_model_container: 2
2023-03-12 16:28:26,317:INFO:display_container: 2
2023-03-12 16:28:26,317:INFO:Lasso(random_state=6311)
2023-03-12 16:28:26,317:INFO:create_model() successfully completed......................................
2023-03-12 16:28:26,391:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:26,392:INFO:Creating metrics dataframe
2023-03-12 16:28:26,401:INFO:Initializing Ridge Regression
2023-03-12 16:28:26,401:INFO:Total runtime is 0.19044790665308634 minutes
2023-03-12 16:28:26,406:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:26,406:INFO:Initializing create_model()
2023-03-12 16:28:26,406:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:26,407:INFO:Checking exceptions
2023-03-12 16:28:26,407:INFO:Importing libraries
2023-03-12 16:28:26,407:INFO:Copying training dataset
2023-03-12 16:28:26,416:INFO:Defining folds
2023-03-12 16:28:26,416:INFO:Declaring metric variables
2023-03-12 16:28:26,420:INFO:Importing untrained model
2023-03-12 16:28:26,425:INFO:Ridge Regression Imported successfully
2023-03-12 16:28:26,436:INFO:Starting cross validation
2023-03-12 16:28:26,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:26,920:INFO:Calculating mean and std
2023-03-12 16:28:26,922:INFO:Creating metrics dataframe
2023-03-12 16:28:26,925:INFO:Uploading results into container
2023-03-12 16:28:26,925:INFO:Uploading model into container now
2023-03-12 16:28:26,925:INFO:master_model_container: 3
2023-03-12 16:28:26,925:INFO:display_container: 2
2023-03-12 16:28:26,926:INFO:Ridge(random_state=6311)
2023-03-12 16:28:26,926:INFO:create_model() successfully completed......................................
2023-03-12 16:28:27,002:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:27,002:INFO:Creating metrics dataframe
2023-03-12 16:28:27,013:INFO:Initializing Elastic Net
2023-03-12 16:28:27,013:INFO:Total runtime is 0.2006538987159729 minutes
2023-03-12 16:28:27,018:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:27,018:INFO:Initializing create_model()
2023-03-12 16:28:27,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:27,019:INFO:Checking exceptions
2023-03-12 16:28:27,019:INFO:Importing libraries
2023-03-12 16:28:27,019:INFO:Copying training dataset
2023-03-12 16:28:27,029:INFO:Defining folds
2023-03-12 16:28:27,029:INFO:Declaring metric variables
2023-03-12 16:28:27,034:INFO:Importing untrained model
2023-03-12 16:28:27,040:INFO:Elastic Net Imported successfully
2023-03-12 16:28:27,051:INFO:Starting cross validation
2023-03-12 16:28:27,053:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:27,353:INFO:Calculating mean and std
2023-03-12 16:28:27,354:INFO:Creating metrics dataframe
2023-03-12 16:28:27,357:INFO:Uploading results into container
2023-03-12 16:28:27,358:INFO:Uploading model into container now
2023-03-12 16:28:27,358:INFO:master_model_container: 4
2023-03-12 16:28:27,358:INFO:display_container: 2
2023-03-12 16:28:27,359:INFO:ElasticNet(random_state=6311)
2023-03-12 16:28:27,359:INFO:create_model() successfully completed......................................
2023-03-12 16:28:27,434:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:27,434:INFO:Creating metrics dataframe
2023-03-12 16:28:27,444:INFO:Initializing Least Angle Regression
2023-03-12 16:28:27,445:INFO:Total runtime is 0.2078512946764628 minutes
2023-03-12 16:28:27,449:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:27,450:INFO:Initializing create_model()
2023-03-12 16:28:27,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:27,450:INFO:Checking exceptions
2023-03-12 16:28:27,450:INFO:Importing libraries
2023-03-12 16:28:27,450:INFO:Copying training dataset
2023-03-12 16:28:27,456:INFO:Defining folds
2023-03-12 16:28:27,457:INFO:Declaring metric variables
2023-03-12 16:28:27,465:INFO:Importing untrained model
2023-03-12 16:28:27,471:INFO:Least Angle Regression Imported successfully
2023-03-12 16:28:27,479:INFO:Starting cross validation
2023-03-12 16:28:27,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:27,591:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,591:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,591:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,684:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,698:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,710:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,714:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,716:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:649: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=4.527e+00, with an active set of 8 regressors, and the smallest cholesky pivot element being 6.747e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-03-12 16:28:27,794:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,799:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:27,822:INFO:Calculating mean and std
2023-03-12 16:28:27,823:INFO:Creating metrics dataframe
2023-03-12 16:28:27,827:INFO:Uploading results into container
2023-03-12 16:28:27,828:INFO:Uploading model into container now
2023-03-12 16:28:27,828:INFO:master_model_container: 5
2023-03-12 16:28:27,828:INFO:display_container: 2
2023-03-12 16:28:27,829:INFO:Lars(random_state=6311)
2023-03-12 16:28:27,829:INFO:create_model() successfully completed......................................
2023-03-12 16:28:27,903:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:27,903:INFO:Creating metrics dataframe
2023-03-12 16:28:27,913:INFO:Initializing Lasso Least Angle Regression
2023-03-12 16:28:27,913:INFO:Total runtime is 0.21565971374511717 minutes
2023-03-12 16:28:27,916:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:27,916:INFO:Initializing create_model()
2023-03-12 16:28:27,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:27,917:INFO:Checking exceptions
2023-03-12 16:28:27,917:INFO:Importing libraries
2023-03-12 16:28:27,917:INFO:Copying training dataset
2023-03-12 16:28:27,923:INFO:Defining folds
2023-03-12 16:28:27,924:INFO:Declaring metric variables
2023-03-12 16:28:27,932:INFO:Importing untrained model
2023-03-12 16:28:27,939:INFO:Lasso Least Angle Regression Imported successfully
2023-03-12 16:28:27,950:INFO:Starting cross validation
2023-03-12 16:28:27,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:28,042:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,042:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,049:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,062:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,152:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,158:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,166:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,176:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,242:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,255:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 16:28:28,279:INFO:Calculating mean and std
2023-03-12 16:28:28,280:INFO:Creating metrics dataframe
2023-03-12 16:28:28,284:INFO:Uploading results into container
2023-03-12 16:28:28,284:INFO:Uploading model into container now
2023-03-12 16:28:28,286:INFO:master_model_container: 6
2023-03-12 16:28:28,286:INFO:display_container: 2
2023-03-12 16:28:28,286:INFO:LassoLars(random_state=6311)
2023-03-12 16:28:28,287:INFO:create_model() successfully completed......................................
2023-03-12 16:28:28,364:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:28,364:INFO:Creating metrics dataframe
2023-03-12 16:28:28,375:INFO:Initializing Orthogonal Matching Pursuit
2023-03-12 16:28:28,375:INFO:Total runtime is 0.2233555754025777 minutes
2023-03-12 16:28:28,379:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:28,379:INFO:Initializing create_model()
2023-03-12 16:28:28,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:28,380:INFO:Checking exceptions
2023-03-12 16:28:28,380:INFO:Importing libraries
2023-03-12 16:28:28,380:INFO:Copying training dataset
2023-03-12 16:28:28,389:INFO:Defining folds
2023-03-12 16:28:28,389:INFO:Declaring metric variables
2023-03-12 16:28:28,395:INFO:Importing untrained model
2023-03-12 16:28:28,401:INFO:Orthogonal Matching Pursuit Imported successfully
2023-03-12 16:28:28,409:INFO:Starting cross validation
2023-03-12 16:28:28,410:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:28,487:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,499:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,502:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,516:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,589:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,598:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,603:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,631:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,674:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,681:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 16:28:28,701:INFO:Calculating mean and std
2023-03-12 16:28:28,703:INFO:Creating metrics dataframe
2023-03-12 16:28:28,706:INFO:Uploading results into container
2023-03-12 16:28:28,707:INFO:Uploading model into container now
2023-03-12 16:28:28,707:INFO:master_model_container: 7
2023-03-12 16:28:28,707:INFO:display_container: 2
2023-03-12 16:28:28,708:INFO:OrthogonalMatchingPursuit()
2023-03-12 16:28:28,708:INFO:create_model() successfully completed......................................
2023-03-12 16:28:28,784:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:28,785:INFO:Creating metrics dataframe
2023-03-12 16:28:28,795:INFO:Initializing Bayesian Ridge
2023-03-12 16:28:28,795:INFO:Total runtime is 0.23035355408986408 minutes
2023-03-12 16:28:28,799:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:28,799:INFO:Initializing create_model()
2023-03-12 16:28:28,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:28,799:INFO:Checking exceptions
2023-03-12 16:28:28,799:INFO:Importing libraries
2023-03-12 16:28:28,799:INFO:Copying training dataset
2023-03-12 16:28:28,806:INFO:Defining folds
2023-03-12 16:28:28,807:INFO:Declaring metric variables
2023-03-12 16:28:28,812:INFO:Importing untrained model
2023-03-12 16:28:28,820:INFO:Bayesian Ridge Imported successfully
2023-03-12 16:28:28,831:INFO:Starting cross validation
2023-03-12 16:28:28,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:29,188:INFO:Calculating mean and std
2023-03-12 16:28:29,190:INFO:Creating metrics dataframe
2023-03-12 16:28:29,193:INFO:Uploading results into container
2023-03-12 16:28:29,194:INFO:Uploading model into container now
2023-03-12 16:28:29,194:INFO:master_model_container: 8
2023-03-12 16:28:29,194:INFO:display_container: 2
2023-03-12 16:28:29,195:INFO:BayesianRidge()
2023-03-12 16:28:29,195:INFO:create_model() successfully completed......................................
2023-03-12 16:28:29,274:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:29,274:INFO:Creating metrics dataframe
2023-03-12 16:28:29,285:INFO:Initializing Passive Aggressive Regressor
2023-03-12 16:28:29,285:INFO:Total runtime is 0.23852054278055826 minutes
2023-03-12 16:28:29,288:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:29,288:INFO:Initializing create_model()
2023-03-12 16:28:29,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:29,289:INFO:Checking exceptions
2023-03-12 16:28:29,289:INFO:Importing libraries
2023-03-12 16:28:29,289:INFO:Copying training dataset
2023-03-12 16:28:29,294:INFO:Defining folds
2023-03-12 16:28:29,294:INFO:Declaring metric variables
2023-03-12 16:28:29,303:INFO:Importing untrained model
2023-03-12 16:28:29,310:INFO:Passive Aggressive Regressor Imported successfully
2023-03-12 16:28:29,322:INFO:Starting cross validation
2023-03-12 16:28:29,324:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:29,675:INFO:Calculating mean and std
2023-03-12 16:28:29,676:INFO:Creating metrics dataframe
2023-03-12 16:28:29,679:INFO:Uploading results into container
2023-03-12 16:28:29,680:INFO:Uploading model into container now
2023-03-12 16:28:29,680:INFO:master_model_container: 9
2023-03-12 16:28:29,681:INFO:display_container: 2
2023-03-12 16:28:29,681:INFO:PassiveAggressiveRegressor(random_state=6311)
2023-03-12 16:28:29,681:INFO:create_model() successfully completed......................................
2023-03-12 16:28:29,757:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:29,757:INFO:Creating metrics dataframe
2023-03-12 16:28:29,772:INFO:Initializing Huber Regressor
2023-03-12 16:28:29,772:INFO:Total runtime is 0.24663217067718504 minutes
2023-03-12 16:28:29,776:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:29,776:INFO:Initializing create_model()
2023-03-12 16:28:29,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:29,777:INFO:Checking exceptions
2023-03-12 16:28:29,777:INFO:Importing libraries
2023-03-12 16:28:29,777:INFO:Copying training dataset
2023-03-12 16:28:29,782:INFO:Defining folds
2023-03-12 16:28:29,783:INFO:Declaring metric variables
2023-03-12 16:28:29,790:INFO:Importing untrained model
2023-03-12 16:28:29,795:INFO:Huber Regressor Imported successfully
2023-03-12 16:28:29,807:INFO:Starting cross validation
2023-03-12 16:28:29,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:29,987:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:29,988:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,000:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,187:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,193:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,209:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,226:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,375:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,379:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-03-12 16:28:30,419:INFO:Calculating mean and std
2023-03-12 16:28:30,421:INFO:Creating metrics dataframe
2023-03-12 16:28:30,426:INFO:Uploading results into container
2023-03-12 16:28:30,426:INFO:Uploading model into container now
2023-03-12 16:28:30,427:INFO:master_model_container: 10
2023-03-12 16:28:30,427:INFO:display_container: 2
2023-03-12 16:28:30,427:INFO:HuberRegressor()
2023-03-12 16:28:30,427:INFO:create_model() successfully completed......................................
2023-03-12 16:28:30,526:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:30,526:INFO:Creating metrics dataframe
2023-03-12 16:28:30,542:INFO:Initializing K Neighbors Regressor
2023-03-12 16:28:30,542:INFO:Total runtime is 0.25946454604466757 minutes
2023-03-12 16:28:30,545:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:30,545:INFO:Initializing create_model()
2023-03-12 16:28:30,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:30,546:INFO:Checking exceptions
2023-03-12 16:28:30,546:INFO:Importing libraries
2023-03-12 16:28:30,546:INFO:Copying training dataset
2023-03-12 16:28:30,557:INFO:Defining folds
2023-03-12 16:28:30,557:INFO:Declaring metric variables
2023-03-12 16:28:30,562:INFO:Importing untrained model
2023-03-12 16:28:30,572:INFO:K Neighbors Regressor Imported successfully
2023-03-12 16:28:30,585:INFO:Starting cross validation
2023-03-12 16:28:30,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:31,015:INFO:Calculating mean and std
2023-03-12 16:28:31,017:INFO:Creating metrics dataframe
2023-03-12 16:28:31,022:INFO:Uploading results into container
2023-03-12 16:28:31,022:INFO:Uploading model into container now
2023-03-12 16:28:31,023:INFO:master_model_container: 11
2023-03-12 16:28:31,023:INFO:display_container: 2
2023-03-12 16:28:31,023:INFO:KNeighborsRegressor(n_jobs=-1)
2023-03-12 16:28:31,024:INFO:create_model() successfully completed......................................
2023-03-12 16:28:31,103:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:31,103:INFO:Creating metrics dataframe
2023-03-12 16:28:31,115:INFO:Initializing Decision Tree Regressor
2023-03-12 16:28:31,115:INFO:Total runtime is 0.26901829640070596 minutes
2023-03-12 16:28:31,118:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:31,119:INFO:Initializing create_model()
2023-03-12 16:28:31,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:31,119:INFO:Checking exceptions
2023-03-12 16:28:31,119:INFO:Importing libraries
2023-03-12 16:28:31,119:INFO:Copying training dataset
2023-03-12 16:28:31,125:INFO:Defining folds
2023-03-12 16:28:31,125:INFO:Declaring metric variables
2023-03-12 16:28:31,130:INFO:Importing untrained model
2023-03-12 16:28:31,135:INFO:Decision Tree Regressor Imported successfully
2023-03-12 16:28:31,148:INFO:Starting cross validation
2023-03-12 16:28:31,149:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:31,505:INFO:Calculating mean and std
2023-03-12 16:28:31,507:INFO:Creating metrics dataframe
2023-03-12 16:28:31,510:INFO:Uploading results into container
2023-03-12 16:28:31,511:INFO:Uploading model into container now
2023-03-12 16:28:31,511:INFO:master_model_container: 12
2023-03-12 16:28:31,512:INFO:display_container: 2
2023-03-12 16:28:31,512:INFO:DecisionTreeRegressor(random_state=6311)
2023-03-12 16:28:31,512:INFO:create_model() successfully completed......................................
2023-03-12 16:28:31,588:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:31,588:INFO:Creating metrics dataframe
2023-03-12 16:28:31,600:INFO:Initializing Random Forest Regressor
2023-03-12 16:28:31,600:INFO:Total runtime is 0.2770967483520508 minutes
2023-03-12 16:28:31,604:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:31,604:INFO:Initializing create_model()
2023-03-12 16:28:31,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:31,604:INFO:Checking exceptions
2023-03-12 16:28:31,604:INFO:Importing libraries
2023-03-12 16:28:31,605:INFO:Copying training dataset
2023-03-12 16:28:31,610:INFO:Defining folds
2023-03-12 16:28:31,610:INFO:Declaring metric variables
2023-03-12 16:28:31,616:INFO:Importing untrained model
2023-03-12 16:28:31,624:INFO:Random Forest Regressor Imported successfully
2023-03-12 16:28:31,634:INFO:Starting cross validation
2023-03-12 16:28:31,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:33,093:INFO:Calculating mean and std
2023-03-12 16:28:33,095:INFO:Creating metrics dataframe
2023-03-12 16:28:33,098:INFO:Uploading results into container
2023-03-12 16:28:33,098:INFO:Uploading model into container now
2023-03-12 16:28:33,099:INFO:master_model_container: 13
2023-03-12 16:28:33,099:INFO:display_container: 2
2023-03-12 16:28:33,099:INFO:RandomForestRegressor(n_jobs=-1, random_state=6311)
2023-03-12 16:28:33,100:INFO:create_model() successfully completed......................................
2023-03-12 16:28:33,173:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:33,174:INFO:Creating metrics dataframe
2023-03-12 16:28:33,187:INFO:Initializing Extra Trees Regressor
2023-03-12 16:28:33,187:INFO:Total runtime is 0.3035457054773966 minutes
2023-03-12 16:28:33,191:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:33,191:INFO:Initializing create_model()
2023-03-12 16:28:33,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:33,191:INFO:Checking exceptions
2023-03-12 16:28:33,192:INFO:Importing libraries
2023-03-12 16:28:33,192:INFO:Copying training dataset
2023-03-12 16:28:33,197:INFO:Defining folds
2023-03-12 16:28:33,198:INFO:Declaring metric variables
2023-03-12 16:28:33,205:INFO:Importing untrained model
2023-03-12 16:28:33,215:INFO:Extra Trees Regressor Imported successfully
2023-03-12 16:28:33,224:INFO:Starting cross validation
2023-03-12 16:28:33,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:34,561:INFO:Calculating mean and std
2023-03-12 16:28:34,563:INFO:Creating metrics dataframe
2023-03-12 16:28:34,566:INFO:Uploading results into container
2023-03-12 16:28:34,566:INFO:Uploading model into container now
2023-03-12 16:28:34,567:INFO:master_model_container: 14
2023-03-12 16:28:34,567:INFO:display_container: 2
2023-03-12 16:28:34,567:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6311)
2023-03-12 16:28:34,567:INFO:create_model() successfully completed......................................
2023-03-12 16:28:34,647:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:34,647:INFO:Creating metrics dataframe
2023-03-12 16:28:34,659:INFO:Initializing AdaBoost Regressor
2023-03-12 16:28:34,659:INFO:Total runtime is 0.32808032035827633 minutes
2023-03-12 16:28:34,662:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:34,663:INFO:Initializing create_model()
2023-03-12 16:28:34,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:34,663:INFO:Checking exceptions
2023-03-12 16:28:34,664:INFO:Importing libraries
2023-03-12 16:28:34,664:INFO:Copying training dataset
2023-03-12 16:28:34,670:INFO:Defining folds
2023-03-12 16:28:34,670:INFO:Declaring metric variables
2023-03-12 16:28:34,675:INFO:Importing untrained model
2023-03-12 16:28:34,680:INFO:AdaBoost Regressor Imported successfully
2023-03-12 16:28:34,692:INFO:Starting cross validation
2023-03-12 16:28:34,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:35,063:INFO:Calculating mean and std
2023-03-12 16:28:35,066:INFO:Creating metrics dataframe
2023-03-12 16:28:35,071:INFO:Uploading results into container
2023-03-12 16:28:35,072:INFO:Uploading model into container now
2023-03-12 16:28:35,073:INFO:master_model_container: 15
2023-03-12 16:28:35,073:INFO:display_container: 2
2023-03-12 16:28:35,073:INFO:AdaBoostRegressor(random_state=6311)
2023-03-12 16:28:35,074:INFO:create_model() successfully completed......................................
2023-03-12 16:28:35,147:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:35,147:INFO:Creating metrics dataframe
2023-03-12 16:28:35,159:INFO:Initializing Gradient Boosting Regressor
2023-03-12 16:28:35,159:INFO:Total runtime is 0.3364244977633158 minutes
2023-03-12 16:28:35,163:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:35,163:INFO:Initializing create_model()
2023-03-12 16:28:35,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:35,163:INFO:Checking exceptions
2023-03-12 16:28:35,163:INFO:Importing libraries
2023-03-12 16:28:35,163:INFO:Copying training dataset
2023-03-12 16:28:35,169:INFO:Defining folds
2023-03-12 16:28:35,170:INFO:Declaring metric variables
2023-03-12 16:28:35,174:INFO:Importing untrained model
2023-03-12 16:28:35,183:INFO:Gradient Boosting Regressor Imported successfully
2023-03-12 16:28:35,193:INFO:Starting cross validation
2023-03-12 16:28:35,194:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:35,801:INFO:Calculating mean and std
2023-03-12 16:28:35,802:INFO:Creating metrics dataframe
2023-03-12 16:28:35,805:INFO:Uploading results into container
2023-03-12 16:28:35,806:INFO:Uploading model into container now
2023-03-12 16:28:35,806:INFO:master_model_container: 16
2023-03-12 16:28:35,806:INFO:display_container: 2
2023-03-12 16:28:35,807:INFO:GradientBoostingRegressor(random_state=6311)
2023-03-12 16:28:35,807:INFO:create_model() successfully completed......................................
2023-03-12 16:28:35,877:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:35,878:INFO:Creating metrics dataframe
2023-03-12 16:28:35,892:INFO:Initializing Light Gradient Boosting Machine
2023-03-12 16:28:35,892:INFO:Total runtime is 0.3486418485641479 minutes
2023-03-12 16:28:35,898:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:35,898:INFO:Initializing create_model()
2023-03-12 16:28:35,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:35,899:INFO:Checking exceptions
2023-03-12 16:28:35,899:INFO:Importing libraries
2023-03-12 16:28:35,899:INFO:Copying training dataset
2023-03-12 16:28:35,905:INFO:Defining folds
2023-03-12 16:28:35,905:INFO:Declaring metric variables
2023-03-12 16:28:35,909:INFO:Importing untrained model
2023-03-12 16:28:35,915:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-12 16:28:35,927:INFO:Starting cross validation
2023-03-12 16:28:35,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:38,202:INFO:Calculating mean and std
2023-03-12 16:28:38,204:INFO:Creating metrics dataframe
2023-03-12 16:28:38,207:INFO:Uploading results into container
2023-03-12 16:28:38,207:INFO:Uploading model into container now
2023-03-12 16:28:38,208:INFO:master_model_container: 17
2023-03-12 16:28:38,208:INFO:display_container: 2
2023-03-12 16:28:38,208:INFO:LGBMRegressor(random_state=6311)
2023-03-12 16:28:38,208:INFO:create_model() successfully completed......................................
2023-03-12 16:28:38,301:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:38,301:INFO:Creating metrics dataframe
2023-03-12 16:28:38,316:INFO:Initializing Dummy Regressor
2023-03-12 16:28:38,316:INFO:Total runtime is 0.3890340725580851 minutes
2023-03-12 16:28:38,322:INFO:SubProcess create_model() called ==================================
2023-03-12 16:28:38,322:INFO:Initializing create_model()
2023-03-12 16:28:38,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002599B17FBB0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:38,323:INFO:Checking exceptions
2023-03-12 16:28:38,323:INFO:Importing libraries
2023-03-12 16:28:38,323:INFO:Copying training dataset
2023-03-12 16:28:38,328:INFO:Defining folds
2023-03-12 16:28:38,328:INFO:Declaring metric variables
2023-03-12 16:28:38,338:INFO:Importing untrained model
2023-03-12 16:28:38,346:INFO:Dummy Regressor Imported successfully
2023-03-12 16:28:38,367:INFO:Starting cross validation
2023-03-12 16:28:38,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-12 16:28:38,971:INFO:Calculating mean and std
2023-03-12 16:28:38,973:INFO:Creating metrics dataframe
2023-03-12 16:28:38,976:INFO:Uploading results into container
2023-03-12 16:28:38,977:INFO:Uploading model into container now
2023-03-12 16:28:38,978:INFO:master_model_container: 18
2023-03-12 16:28:38,978:INFO:display_container: 2
2023-03-12 16:28:38,978:INFO:DummyRegressor()
2023-03-12 16:28:38,978:INFO:create_model() successfully completed......................................
2023-03-12 16:28:39,077:INFO:SubProcess create_model() end ==================================
2023-03-12 16:28:39,077:INFO:Creating metrics dataframe
2023-03-12 16:28:39,114:INFO:Initializing create_model()
2023-03-12 16:28:39,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=GradientBoostingRegressor(random_state=6311), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-12 16:28:39,116:INFO:Checking exceptions
2023-03-12 16:28:39,119:INFO:Importing libraries
2023-03-12 16:28:39,119:INFO:Copying training dataset
2023-03-12 16:28:39,123:INFO:Defining folds
2023-03-12 16:28:39,123:INFO:Declaring metric variables
2023-03-12 16:28:39,123:INFO:Importing untrained model
2023-03-12 16:28:39,124:INFO:Declaring custom model
2023-03-12 16:28:39,125:INFO:Gradient Boosting Regressor Imported successfully
2023-03-12 16:28:39,128:INFO:Cross validation set to False
2023-03-12 16:28:39,128:INFO:Fitting Model
2023-03-12 16:28:39,341:INFO:GradientBoostingRegressor(random_state=6311)
2023-03-12 16:28:39,341:INFO:create_model() successfully completed......................................
2023-03-12 16:28:39,490:INFO:master_model_container: 18
2023-03-12 16:28:39,490:INFO:display_container: 2
2023-03-12 16:28:39,491:INFO:GradientBoostingRegressor(random_state=6311)
2023-03-12 16:28:39,491:INFO:compare_models() successfully completed......................................
2023-03-12 16:29:21,107:INFO:Initializing evaluate_model()
2023-03-12 16:29:21,107:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=GradientBoostingRegressor(random_state=6311), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-12 16:29:21,151:INFO:Initializing plot_model()
2023-03-12 16:29:21,151:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=6311), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, system=True)
2023-03-12 16:29:21,151:INFO:Checking exceptions
2023-03-12 16:29:21,154:INFO:Preloading libraries
2023-03-12 16:29:21,162:INFO:Copying training dataset
2023-03-12 16:29:21,162:INFO:Plot type: pipeline
2023-03-12 16:29:21,887:INFO:Visual Rendered Successfully
2023-03-12 16:29:21,968:INFO:plot_model() successfully completed......................................
2023-03-12 16:29:26,976:INFO:Initializing plot_model()
2023-03-12 16:29:26,976:INFO:plot_model(plot=rfe, fold=KFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=6311), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, system=True)
2023-03-12 16:29:26,976:INFO:Checking exceptions
2023-03-12 16:29:26,982:INFO:Preloading libraries
2023-03-12 16:29:26,995:INFO:Copying training dataset
2023-03-12 16:29:26,995:INFO:Plot type: rfe
2023-03-12 16:29:27,319:INFO:Fitting Model
2023-03-12 16:29:58,598:INFO:Visual Rendered Successfully
2023-03-12 16:29:58,683:INFO:plot_model() successfully completed......................................
2023-03-12 16:29:58,693:INFO:Initializing plot_model()
2023-03-12 16:29:58,693:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=6311), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, system=True)
2023-03-12 16:29:58,693:INFO:Checking exceptions
2023-03-12 16:29:58,700:INFO:Preloading libraries
2023-03-12 16:29:58,707:INFO:Copying training dataset
2023-03-12 16:29:58,707:INFO:Plot type: residuals
2023-03-12 16:29:59,171:INFO:Fitting Model
2023-03-12 16:29:59,185:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but GradientBoostingRegressor was fitted with feature names
  warnings.warn(

2023-03-12 16:29:59,227:INFO:Scoring test/hold-out set
2023-03-12 16:29:59,749:INFO:Visual Rendered Successfully
2023-03-12 16:29:59,826:INFO:plot_model() successfully completed......................................
2023-03-12 16:30:17,894:INFO:Initializing plot_model()
2023-03-12 16:30:17,895:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=6311), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, system=True)
2023-03-12 16:30:17,895:INFO:Checking exceptions
2023-03-12 16:30:17,902:INFO:Preloading libraries
2023-03-12 16:30:17,917:INFO:Copying training dataset
2023-03-12 16:30:17,917:INFO:Plot type: feature
2023-03-12 16:30:17,918:WARNING:No coef_ found. Trying feature_importances_
2023-03-12 16:30:18,095:INFO:Visual Rendered Successfully
2023-03-12 16:30:18,172:INFO:plot_model() successfully completed......................................
2023-03-12 16:30:49,058:INFO:Initializing predict_model()
2023-03-12 16:30:49,058:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=GradientBoostingRegressor(random_state=6311), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000259A08585E0>)
2023-03-12 16:30:49,059:INFO:Checking exceptions
2023-03-12 16:30:49,059:INFO:Preloading libraries
2023-03-12 16:31:23,221:INFO:Initializing predict_model()
2023-03-12 16:31:23,221:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002599B29CC10>, estimator=GradientBoostingRegressor(random_state=6311), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000259A08584C0>)
2023-03-12 16:31:23,221:INFO:Checking exceptions
2023-03-12 16:31:23,221:INFO:Preloading libraries
2023-03-12 16:31:23,225:INFO:Set up data.
2023-03-12 16:31:23,236:INFO:Set up index.
2023-03-12 16:31:45,118:INFO:Initializing save_model()
2023-03-12 16:31:45,118:INFO:save_model(model=GradientBoostingRegressor(random_state=6311), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(...ker'],
                                    transformer=OrdinalEncoder(cols=['sex',
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-03-12 16:31:45,118:INFO:Adding model into prep_pipe
2023-03-12 16:31:45,129:INFO:my_best_pipeline.pkl saved in current working directory
2023-03-12 16:31:45,141:INFO:Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 GradientBoostingRegressor(random_state=6311))])
2023-03-12 16:31:45,141:INFO:save_model() successfully completed......................................
2023-03-12 16:32:09,432:INFO:Initializing load_model()
2023-03-12 16:32:09,432:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-03-12 16:33:04,632:INFO:PyCaret ClusteringExperiment
2023-03-12 16:33:04,632:INFO:Logging name: cluster-default-name
2023-03-12 16:33:04,632:INFO:ML Usecase: MLUsecase.CLUSTERING
2023-03-12 16:33:04,632:INFO:version 3.0.0.rc4
2023-03-12 16:33:04,632:INFO:Initializing setup()
2023-03-12 16:33:04,632:INFO:self.USI: 20fb
2023-03-12 16:33:04,632:INFO:self.variable_keys: {'html_param', '_ml_usecase', '_all_metrics', '_gpu_n_jobs_param', 'data', 'variable_keys', 'pipeline', 'logging_param', 'exp_id', 'gpu_param', '_all_models_internal', 'log_plots_param', 'exp_name_log', 'n_jobs_param', 'idx', 'X', '_all_models', 'memory', 'master_model_container', 'display_container', '_available_plots', 'USI', 'seed'}
2023-03-12 16:33:04,632:INFO:Checking environment
2023-03-12 16:33:04,632:INFO:python_version: 3.9.13
2023-03-12 16:33:04,632:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-03-12 16:33:04,632:INFO:machine: AMD64
2023-03-12 16:33:04,632:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-12 16:33:04,632:INFO:Memory: svmem(total=17043402752, available=9388261376, percent=44.9, used=7655141376, free=9388261376)
2023-03-12 16:33:04,632:INFO:Physical Core: 2
2023-03-12 16:33:04,632:INFO:Logical Core: 4
2023-03-12 16:33:04,632:INFO:Checking libraries
2023-03-12 16:33:04,632:INFO:System:
2023-03-12 16:33:04,632:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-03-12 16:33:04,632:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-03-12 16:33:04,632:INFO:   machine: Windows-10-10.0.19044-SP0
2023-03-12 16:33:04,632:INFO:PyCaret required dependencies:
2023-03-12 16:33:04,632:INFO:                 pip: 22.2.2
2023-03-12 16:33:04,632:INFO:          setuptools: 63.4.1
2023-03-12 16:33:04,632:INFO:             pycaret: 3.0.0rc4
2023-03-12 16:33:04,632:INFO:             IPython: 7.31.1
2023-03-12 16:33:04,632:INFO:          ipywidgets: 7.6.5
2023-03-12 16:33:04,632:INFO:                tqdm: 4.64.1
2023-03-12 16:33:04,632:INFO:               numpy: 1.21.5
2023-03-12 16:33:04,632:INFO:              pandas: 1.4.4
2023-03-12 16:33:04,632:INFO:              jinja2: 2.11.3
2023-03-12 16:33:04,632:INFO:               scipy: 1.9.1
2023-03-12 16:33:04,632:INFO:              joblib: 1.2.0
2023-03-12 16:33:04,632:INFO:             sklearn: 1.1.3
2023-03-12 16:33:04,632:INFO:                pyod: 1.0.6
2023-03-12 16:33:04,632:INFO:            imblearn: 0.9.1
2023-03-12 16:33:04,632:INFO:   category_encoders: 2.5.1.post0
2023-03-12 16:33:04,632:INFO:            lightgbm: 3.3.3
2023-03-12 16:33:04,632:INFO:               numba: 0.55.1
2023-03-12 16:33:04,632:INFO:            requests: 2.28.1
2023-03-12 16:33:04,632:INFO:          matplotlib: 3.5.2
2023-03-12 16:33:04,632:INFO:          scikitplot: 0.3.7
2023-03-12 16:33:04,632:INFO:         yellowbrick: 1.5
2023-03-12 16:33:04,632:INFO:              plotly: 5.9.0
2023-03-12 16:33:04,632:INFO:             kaleido: 0.2.1
2023-03-12 16:33:04,632:INFO:         statsmodels: 0.13.2
2023-03-12 16:33:04,632:INFO:              sktime: 0.14.1
2023-03-12 16:33:04,632:INFO:               tbats: 1.1.1
2023-03-12 16:33:04,632:INFO:            pmdarima: 1.8.4
2023-03-12 16:33:04,632:INFO:              psutil: 5.9.0
2023-03-12 16:33:04,632:INFO:PyCaret optional dependencies:
2023-03-12 16:33:04,632:INFO:                shap: Not installed
2023-03-12 16:33:04,632:INFO:           interpret: Not installed
2023-03-12 16:33:04,632:INFO:                umap: Not installed
2023-03-12 16:33:04,632:INFO:    pandas_profiling: 3.5.0
2023-03-12 16:33:04,632:INFO:  explainerdashboard: Not installed
2023-03-12 16:33:04,632:INFO:             autoviz: Not installed
2023-03-12 16:33:04,632:INFO:           fairlearn: Not installed
2023-03-12 16:33:04,632:INFO:             xgboost: Not installed
2023-03-12 16:33:04,632:INFO:            catboost: Not installed
2023-03-12 16:33:04,632:INFO:              kmodes: Not installed
2023-03-12 16:33:04,632:INFO:             mlxtend: 0.21.0
2023-03-12 16:33:04,632:INFO:       statsforecast: Not installed
2023-03-12 16:33:04,648:INFO:        tune_sklearn: Not installed
2023-03-12 16:33:04,648:INFO:                 ray: Not installed
2023-03-12 16:33:04,648:INFO:            hyperopt: Not installed
2023-03-12 16:33:04,648:INFO:              optuna: Not installed
2023-03-12 16:33:04,648:INFO:               skopt: Not installed
2023-03-12 16:33:04,648:INFO:              mlflow: Not installed
2023-03-12 16:33:04,648:INFO:              gradio: Not installed
2023-03-12 16:33:04,648:INFO:             fastapi: Not installed
2023-03-12 16:33:04,648:INFO:             uvicorn: Not installed
2023-03-12 16:33:04,648:INFO:              m2cgen: Not installed
2023-03-12 16:33:04,648:INFO:           evidently: Not installed
2023-03-12 16:33:04,648:INFO:                nltk: 3.7
2023-03-12 16:33:04,648:INFO:            pyLDAvis: Not installed
2023-03-12 16:33:04,648:INFO:              gensim: 4.1.2
2023-03-12 16:33:04,648:INFO:               spacy: Not installed
2023-03-12 16:33:04,648:INFO:           wordcloud: 1.8.2.2
2023-03-12 16:33:04,648:INFO:            textblob: Not installed
2023-03-12 16:33:04,648:INFO:               fugue: Not installed
2023-03-12 16:33:04,648:INFO:           streamlit: 1.15.2
2023-03-12 16:33:04,648:INFO:             prophet: Not installed
2023-03-12 16:33:04,648:INFO:None
2023-03-12 16:33:04,648:INFO:Set up data.
2023-03-12 16:33:04,648:INFO:Set up index.
2023-03-12 16:33:04,663:INFO:Assigning column types.
2023-03-12 16:33:04,663:INFO:Preparing preprocessing pipeline...
2023-03-12 16:33:04,663:INFO:Set up simple imputation.
2023-03-12 16:33:04,663:INFO:Set up feature normalization.
2023-03-12 16:33:04,710:INFO:Finished creating preprocessing pipeline.
2023-03-12 16:33:04,710:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'Income', 'SpendingScore',
                                             'Savings'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2023-03-12 16:33:04,710:INFO:Creating final display dataframe.
2023-03-12 16:33:04,757:INFO:Setup display_container:                Description                 Value
0               Session id                  1837
1      Original data shape              (505, 4)
2   Transformed data shape              (505, 4)
3         Numeric features                     4
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  20fb
2023-03-12 16:33:04,757:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:33:04,757:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 16:33:04,774:INFO:setup() successfully completed in 0.14s...............
2023-03-12 16:34:33,605:INFO:Initializing create_model()
2023-03-12 16:34:33,606:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, estimator=kmeans, num_clusters=4, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2023-03-12 16:34:33,606:INFO:Checking exceptions
2023-03-12 16:34:33,678:INFO:Importing untrained model
2023-03-12 16:34:33,686:INFO:K-Means Clustering Imported successfully
2023-03-12 16:34:33,696:INFO:Fitting Model
2023-03-12 16:34:33,773:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

2023-03-12 16:34:34,055:INFO:KMeans(n_clusters=4, random_state=1837)
2023-03-12 16:34:34,055:INFO:create_models() successfully completed......................................
2023-03-12 16:34:34,055:INFO:Uploading results into container
2023-03-12 16:34:34,072:INFO:Uploading model into container now
2023-03-12 16:34:34,083:INFO:master_model_container: 1
2023-03-12 16:34:34,083:INFO:display_container: 2
2023-03-12 16:34:34,084:INFO:KMeans(n_clusters=4, random_state=1837)
2023-03-12 16:34:34,084:INFO:create_model() successfully completed......................................
2023-03-12 16:35:21,378:INFO:Initializing evaluate_model()
2023-03-12 16:35:21,379:INFO:evaluate_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, estimator=KMeans(n_clusters=4, random_state=1837), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-12 16:35:21,402:INFO:Initializing plot_model()
2023-03-12 16:35:21,402:INFO:plot_model(plot=pipeline, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=1837), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, system=True)
2023-03-12 16:35:21,402:INFO:Checking exceptions
2023-03-12 16:35:21,404:INFO:Preloading libraries
2023-03-12 16:35:21,404:INFO:Copying training dataset
2023-03-12 16:35:21,405:INFO:Plot type: pipeline
2023-03-12 16:35:21,539:INFO:Visual Rendered Successfully
2023-03-12 16:35:21,617:INFO:plot_model() successfully completed......................................
2023-03-12 16:35:29,170:INFO:Initializing plot_model()
2023-03-12 16:35:29,171:INFO:plot_model(plot=tsne, fold=None, use_train_data=False, verbose=False, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=1837), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, system=True)
2023-03-12 16:35:29,171:INFO:Checking exceptions
2023-03-12 16:35:29,173:INFO:Preloading libraries
2023-03-12 16:35:29,173:INFO:Copying training dataset
2023-03-12 16:35:29,173:INFO:Plot type: tsne
2023-03-12 16:35:29,174:INFO:SubProcess assign_model() called ==================================
2023-03-12 16:35:29,174:INFO:Initializing assign_model()
2023-03-12 16:35:29,174:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, model=KMeans(n_clusters=4, random_state=1837), transformation=True, score=False, verbose=False)
2023-03-12 16:35:29,174:INFO:Checking exceptions
2023-03-12 16:35:29,175:INFO:Determining Trained Model
2023-03-12 16:35:29,175:INFO:Trained Model : K-Means Clustering
2023-03-12 16:35:29,175:INFO:Copying data
2023-03-12 16:35:29,187:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-03-12 16:35:29,188:INFO:(505, 5)
2023-03-12 16:35:29,188:INFO:assign_model() successfully completed......................................
2023-03-12 16:35:29,188:INFO:SubProcess assign_model() end ==================================
2023-03-12 16:35:29,189:INFO:Fitting TSNE()
2023-03-12 16:35:29,212:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:800: FutureWarning: The default initialization in TSNE will change from 'random' to 'pca' in 1.2.
  warnings.warn(

2023-03-12 16:35:29,212:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\manifold\_t_sne.py:810: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.
  warnings.warn(

2023-03-12 16:35:35,134:INFO:Sorting dataframe
2023-03-12 16:35:35,136:INFO:Rendering Visual
2023-03-12 16:35:45,573:INFO:Visual Rendered Successfully
2023-03-12 16:35:45,682:INFO:plot_model() successfully completed......................................
2023-03-12 16:36:08,427:INFO:Initializing plot_model()
2023-03-12 16:36:08,427:INFO:plot_model(plot=cluster, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=1837), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, system=True)
2023-03-12 16:36:08,427:INFO:Checking exceptions
2023-03-12 16:36:08,431:INFO:Preloading libraries
2023-03-12 16:36:08,432:INFO:Copying training dataset
2023-03-12 16:36:08,432:INFO:Plot type: cluster
2023-03-12 16:36:08,433:INFO:SubProcess assign_model() called ==================================
2023-03-12 16:36:08,433:INFO:Initializing assign_model()
2023-03-12 16:36:08,433:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, model=KMeans(n_clusters=4, random_state=1837), transformation=True, score=True, verbose=False)
2023-03-12 16:36:08,433:INFO:Checking exceptions
2023-03-12 16:36:08,434:INFO:Determining Trained Model
2023-03-12 16:36:08,434:INFO:Trained Model : K-Means Clustering
2023-03-12 16:36:08,434:INFO:Copying data
2023-03-12 16:36:08,445:INFO:Transformation parameter set to True. Assigned clusters are attached on transformed dataset.
2023-03-12 16:36:08,446:INFO:(505, 5)
2023-03-12 16:36:08,446:INFO:assign_model() successfully completed......................................
2023-03-12 16:36:08,446:INFO:SubProcess assign_model() end ==================================
2023-03-12 16:36:08,448:INFO:Fitting PCA()
2023-03-12 16:36:08,774:INFO:Sorting dataframe
2023-03-12 16:36:08,775:INFO:Rendering Visual
2023-03-12 16:36:09,315:INFO:Visual Rendered Successfully
2023-03-12 16:36:09,403:INFO:plot_model() successfully completed......................................
2023-03-12 16:36:22,031:INFO:Initializing plot_model()
2023-03-12 16:36:22,031:INFO:plot_model(plot=elbow, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=1837), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, system=True)
2023-03-12 16:36:22,031:INFO:Checking exceptions
2023-03-12 16:36:22,035:INFO:Preloading libraries
2023-03-12 16:36:22,035:INFO:Copying training dataset
2023-03-12 16:36:22,035:INFO:Plot type: elbow
2023-03-12 16:36:22,290:INFO:Fitting Model
2023-03-12 16:36:22,312:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:22,559:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:22,816:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:23,076:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:23,386:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:23,662:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:23,990:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:24,342:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:24,666:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\cluster\_kmeans.py:1334: UserWarning:

KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.


2023-03-12 16:36:25,218:INFO:Visual Rendered Successfully
2023-03-12 16:36:25,319:INFO:plot_model() successfully completed......................................
2023-03-12 16:36:30,166:INFO:Initializing plot_model()
2023-03-12 16:36:30,167:INFO:plot_model(plot=silhouette, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KMeans(n_clusters=4, random_state=1837), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, system=True)
2023-03-12 16:36:30,167:INFO:Checking exceptions
2023-03-12 16:36:30,171:INFO:Preloading libraries
2023-03-12 16:36:30,171:INFO:Copying training dataset
2023-03-12 16:36:30,171:INFO:Plot type: silhouette
2023-03-12 16:36:30,187:INFO:Fitting Model
2023-03-12 16:36:30,187:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\base.py:450: UserWarning:

X does not have valid feature names, but KMeans was fitted with feature names


2023-03-12 16:36:30,436:INFO:Visual Rendered Successfully
2023-03-12 16:36:30,525:INFO:plot_model() successfully completed......................................
2023-03-12 16:36:59,418:INFO:Initializing assign_model()
2023-03-12 16:36:59,418:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, model=KMeans(n_clusters=4, random_state=1837), transformation=False, score=True, verbose=True)
2023-03-12 16:36:59,418:INFO:Checking exceptions
2023-03-12 16:36:59,418:INFO:Determining Trained Model
2023-03-12 16:36:59,419:INFO:Trained Model : K-Means Clustering
2023-03-12 16:36:59,419:INFO:Copying data
2023-03-12 16:36:59,421:INFO:(505, 5)
2023-03-12 16:36:59,421:INFO:assign_model() successfully completed......................................
2023-03-12 16:37:16,779:INFO:Initializing predict_model()
2023-03-12 16:37:16,780:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x00000259A08C15B0>, estimator=KMeans(n_clusters=4, random_state=1837), ml_usecase=None)
2023-03-12 16:38:12,622:INFO:Initializing save_model()
2023-03-12 16:38:12,622:INFO:save_model(model=KMeans(n_clusters=4, random_state=1837), model_name=kmeans_pipeline, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'Income', 'SpendingScore',
                                             'Savings'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2023-03-12 16:38:12,622:INFO:Adding model into prep_pipe
2023-03-12 16:38:12,632:INFO:kmeans_pipeline.pkl saved in current working directory
2023-03-12 16:38:12,642:INFO:Pipeline(memory=Memory(location=C:\Users\du\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'Income', 'SpendingScore',
                                             'Savings'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=4, random_state=1837))])
2023-03-12 16:38:12,642:INFO:save_model() successfully completed......................................
2023-03-12 16:38:12,876:INFO:Initializing load_model()
2023-03-12 16:38:12,877:INFO:load_model(model_name=kmeans_pipeline, platform=None, authentication=None, verbose=True)
2023-03-12 18:02:12,491:INFO:Soft dependency imported: mlxtend: 0.21.0
2023-03-12 18:02:13,153:WARNING:C:\Users\du\AppData\Roaming\Python\Python39\site-packages\mlxtend\frequent_patterns\fpcommon.py:111: DeprecationWarning:

DataFrames with non-bool types result in worse computationalperformance and their support might be discontinued in the future.Please use a DataFrame with bool type


2023-03-12 18:02:22,638:INFO:Soft dependency imported: mlxtend: 0.21.0
2023-03-12 18:02:23,091:WARNING:C:\Users\du\AppData\Roaming\Python\Python39\site-packages\mlxtend\frequent_patterns\fpcommon.py:111: DeprecationWarning:

DataFrames with non-bool types result in worse computationalperformance and their support might be discontinued in the future.Please use a DataFrame with bool type


2023-03-12 18:02:54,251:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:02:54,251:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:08:37,120:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\flask\json\__init__.py:31: DeprecationWarning:

Importing 'itsdangerous.json' is deprecated and will be removed in ItsDangerous 2.1. Use Python's 'json' module instead.


2023-03-12 18:08:37,121:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\flask\json\__init__.py:61: DeprecationWarning:

Importing 'itsdangerous.json' is deprecated and will be removed in ItsDangerous 2.1. Use Python's 'json' module instead.


2023-03-12 18:08:37,121:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\flask\json\__init__.py:103: DeprecationWarning:

Importing 'itsdangerous.json' is deprecated and will be removed in ItsDangerous 2.1. Use Python's 'json' module instead.


2023-03-12 18:08:40,557:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\graph_objects\__init__.py:288: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:08:40,557:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\graph_objects\__init__.py:288: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:08:40,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\graph_objects\__init__.py:288: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:08:40,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\graph_objects\__init__.py:288: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:08:41,006:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sktime\transformations\series\compose.py:17: DeprecationWarning:

transformations.series.compose is deprecated and will be removed in version 0.15.0. All estimators in it will be moved to transformations.compose. Please change imports to transformations.compose to avoid breakage.


2023-03-12 18:08:47,502:INFO:PyCaret TSForecastingExperiment
2023-03-12 18:08:47,502:INFO:Logging name: ts-default-name
2023-03-12 18:08:47,502:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-03-12 18:08:47,503:INFO:version 3.0.0.rc4
2023-03-12 18:08:47,503:INFO:Initializing setup()
2023-03-12 18:08:47,503:INFO:self.USI: bcdf
2023-03-12 18:08:47,503:INFO:self.variable_keys: {'html_param', 'variable_keys', 'approach_type', 'index_type', 'logging_param', 'primary_sp_to_use', 'strictly_positive', 'y', 'seasonality_present', '_all_models_internal', 'log_plots_param', 'exp_name_log', 'X_test', 'fold_param', 'seasonal_period', 'model_engines', 'exogenous_present', 'enforce_pi', 'y_transformed', 'X_train', 'fh', 'display_container', '_available_plots', 'all_sp_values', '_ml_usecase', '_all_metrics', '_gpu_n_jobs_param', 'data', 'pipeline', 'exp_id', 'gpu_param', 'y_test', 'enforce_exogenous', 'y_train', 'fold_generator', 'n_jobs_param', 'y_test_transformed', 'idx', 'y_train_transformed', 'X', 'X_test_transformed', 'X_train_transformed', 'X_transformed', '_all_models', 'memory', 'master_model_container', 'USI', 'seed'}
2023-03-12 18:08:47,504:INFO:Checking environment
2023-03-12 18:08:47,504:INFO:python_version: 3.9.13
2023-03-12 18:08:47,504:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-03-12 18:08:47,504:INFO:machine: AMD64
2023-03-12 18:08:47,504:INFO:platform: Windows-10-10.0.19044-SP0
2023-03-12 18:08:47,504:INFO:Memory: svmem(total=17043402752, available=9383550976, percent=44.9, used=7659851776, free=9383550976)
2023-03-12 18:08:47,504:INFO:Physical Core: 2
2023-03-12 18:08:47,504:INFO:Logical Core: 4
2023-03-12 18:08:47,504:INFO:Checking libraries
2023-03-12 18:08:47,505:INFO:System:
2023-03-12 18:08:47,505:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-03-12 18:08:47,505:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-03-12 18:08:47,505:INFO:   machine: Windows-10-10.0.19044-SP0
2023-03-12 18:08:47,505:INFO:PyCaret required dependencies:
2023-03-12 18:08:47,505:INFO:                 pip: 22.2.2
2023-03-12 18:08:47,505:INFO:          setuptools: 63.4.1
2023-03-12 18:08:47,505:INFO:             pycaret: 3.0.0rc4
2023-03-12 18:08:47,505:INFO:             IPython: 7.31.1
2023-03-12 18:08:47,506:INFO:          ipywidgets: 7.6.5
2023-03-12 18:08:47,506:INFO:                tqdm: 4.64.1
2023-03-12 18:08:47,506:INFO:               numpy: 1.21.5
2023-03-12 18:08:47,506:INFO:              pandas: 1.4.4
2023-03-12 18:08:47,506:INFO:              jinja2: 2.11.3
2023-03-12 18:08:47,506:INFO:               scipy: 1.9.1
2023-03-12 18:08:47,506:INFO:              joblib: 1.2.0
2023-03-12 18:08:47,506:INFO:             sklearn: 1.1.3
2023-03-12 18:08:47,506:INFO:                pyod: 1.0.6
2023-03-12 18:08:47,506:INFO:            imblearn: 0.9.1
2023-03-12 18:08:47,506:INFO:   category_encoders: 2.5.1.post0
2023-03-12 18:08:47,507:INFO:            lightgbm: 3.3.3
2023-03-12 18:08:47,507:INFO:               numba: 0.55.1
2023-03-12 18:08:47,507:INFO:            requests: 2.28.1
2023-03-12 18:08:47,507:INFO:          matplotlib: 3.5.2
2023-03-12 18:08:47,507:INFO:          scikitplot: 0.3.7
2023-03-12 18:08:47,507:INFO:         yellowbrick: 1.5
2023-03-12 18:08:47,507:INFO:              plotly: 5.9.0
2023-03-12 18:08:47,507:INFO:             kaleido: 0.2.1
2023-03-12 18:08:47,507:INFO:         statsmodels: 0.13.2
2023-03-12 18:08:47,507:INFO:              sktime: 0.14.1
2023-03-12 18:08:47,507:INFO:               tbats: 1.1.1
2023-03-12 18:08:47,508:INFO:            pmdarima: 1.8.4
2023-03-12 18:08:47,508:INFO:              psutil: 5.9.0
2023-03-12 18:08:47,508:INFO:PyCaret optional dependencies:
2023-03-12 18:08:47,508:INFO:                shap: Not installed
2023-03-12 18:08:47,508:INFO:           interpret: Not installed
2023-03-12 18:08:47,508:INFO:                umap: Not installed
2023-03-12 18:08:47,508:INFO:    pandas_profiling: 3.5.0
2023-03-12 18:08:47,508:INFO:  explainerdashboard: Not installed
2023-03-12 18:08:47,509:INFO:             autoviz: Not installed
2023-03-12 18:08:47,509:INFO:           fairlearn: Not installed
2023-03-12 18:08:47,509:INFO:             xgboost: Not installed
2023-03-12 18:08:47,509:INFO:            catboost: Not installed
2023-03-12 18:08:47,509:INFO:              kmodes: Not installed
2023-03-12 18:08:47,509:INFO:             mlxtend: 0.21.0
2023-03-12 18:08:47,509:INFO:       statsforecast: Not installed
2023-03-12 18:08:47,509:INFO:        tune_sklearn: Not installed
2023-03-12 18:08:47,509:INFO:                 ray: Not installed
2023-03-12 18:08:47,509:INFO:            hyperopt: Not installed
2023-03-12 18:08:47,509:INFO:              optuna: Not installed
2023-03-12 18:08:47,509:INFO:               skopt: Not installed
2023-03-12 18:08:47,510:INFO:              mlflow: Not installed
2023-03-12 18:08:47,510:INFO:              gradio: Not installed
2023-03-12 18:08:47,510:INFO:             fastapi: Not installed
2023-03-12 18:08:47,510:INFO:             uvicorn: Not installed
2023-03-12 18:08:47,510:INFO:              m2cgen: Not installed
2023-03-12 18:08:47,510:INFO:           evidently: Not installed
2023-03-12 18:08:47,510:INFO:                nltk: 3.7
2023-03-12 18:08:47,510:INFO:            pyLDAvis: Not installed
2023-03-12 18:08:47,510:INFO:              gensim: 4.1.2
2023-03-12 18:08:47,510:INFO:               spacy: Not installed
2023-03-12 18:08:47,511:INFO:           wordcloud: 1.8.2.2
2023-03-12 18:08:47,511:INFO:            textblob: Not installed
2023-03-12 18:08:47,511:INFO:               fugue: Not installed
2023-03-12 18:08:47,511:INFO:           streamlit: 1.15.2
2023-03-12 18:08:47,511:INFO:             prophet: Not installed
2023-03-12 18:08:47,511:INFO:None
2023-03-12 18:08:47,514:INFO:Set Forecast Horizon.
2023-03-12 18:08:47,515:INFO:Set up Train-Test Splits.
2023-03-12 18:08:47,572:INFO:Finished creating preprocessing pipeline.
2023-03-12 18:08:47,573:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-03-12 18:08:47,573:INFO:Set up Seasonal Period.
2023-03-12 18:08:47,576:INFO:Set up whether Multiplicative components allowed.
2023-03-12 18:08:47,667:INFO:Creating final display dataframe.
2023-03-12 18:08:47,678:INFO:Setup Display Container:                     Description                         Value
0                    session_id                           123
1                        Target  Number of airline passengers
2                      Approach                    Univariate
3           Exogenous Variables                   Not Present
4           Original data shape                      (144, 1)
5        Transformed data shape                      (144, 1)
6   Transformed train set shape                      (141, 1)
7    Transformed test set shape                        (3, 1)
8      Rows with missing values                          0.0%
9                Fold Generator       ExpandingWindowSplitter
10                  Fold Number                             5
11  Enforce Prediction Interval                         False
12    Seasonal Period(s) Tested                            12
13          Seasonality Present                          True
14       Seasonalities Detected                          [12]
15          Primary Seasonality                            12
16     Target Strictly Positive                          True
17           Target White Noise                            No
18                Recommended d                             1
19       Recommended Seasonal D                             1
20                   Preprocess                         False
21                     CPU Jobs                            -1
22                      Use GPU                         False
23               Log Experiment                         False
24              Experiment Name               ts-default-name
25                          USI                          bcdf
2023-03-12 18:08:47,683:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-03-12 18:08:48,213:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,213:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,214:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,214:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,215:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,216:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,216:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,217:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,218:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,218:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,223:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,227:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,228:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,228:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,229:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,229:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,230:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,230:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,230:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,230:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,231:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,248:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,248:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,248:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,249:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,249:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,249:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,250:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,250:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,250:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,251:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,254:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,256:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,257:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,257:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,258:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,258:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,259:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,259:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,259:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,260:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,260:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,264:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,264:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,264:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,265:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,265:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,265:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,266:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,266:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,267:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,269:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,272:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,272:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,273:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,273:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,274:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,274:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,275:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,275:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,276:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,279:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,280:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,280:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,280:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,281:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,281:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,281:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,282:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,282:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,285:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,287:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,288:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,288:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,288:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,289:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,289:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,289:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,289:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,290:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,290:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,292:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,293:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,293:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,293:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,294:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,294:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,294:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,294:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,296:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,297:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,297:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,298:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,298:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,298:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,298:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,299:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,299:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,299:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,302:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,302:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,302:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,303:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,303:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,303:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,304:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,304:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,305:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,307:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,307:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,307:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,307:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,308:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,308:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,308:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,308:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,309:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,309:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,311:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,312:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,312:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,312:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,312:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,312:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,313:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,314:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,315:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,316:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,316:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,316:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,317:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,317:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,317:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,317:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,318:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,321:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,321:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,321:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,322:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,322:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,322:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,322:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,324:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,325:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,325:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,326:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,326:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,326:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,326:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,327:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,327:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,327:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,327:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,329:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,330:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,330:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,330:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,331:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,331:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,333:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,334:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,334:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,335:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,335:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,335:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,335:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,336:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,336:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,336:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,339:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,339:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,340:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,340:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,340:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,340:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,342:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,343:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,343:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,344:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,344:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,344:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,344:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,345:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,345:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,345:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,345:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,348:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,349:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,349:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,349:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,349:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,351:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,352:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,352:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,352:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,353:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,353:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,354:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,354:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,354:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,354:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,356:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,357:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,358:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,358:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,358:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,359:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,361:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,361:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,361:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,361:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,362:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,362:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,362:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,362:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,363:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,364:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,366:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,367:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,367:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,367:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,369:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,371:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,371:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,371:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,371:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,372:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,372:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,372:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,372:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,373:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,375:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,376:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,376:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,376:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,378:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,379:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,379:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,379:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,380:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,380:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,380:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,381:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,381:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,381:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,381:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,383:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,384:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,385:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,386:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,388:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,388:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,389:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,389:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,389:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,389:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,390:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,390:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,390:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,392:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,393:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,393:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,395:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,396:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,397:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,397:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,397:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,397:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,398:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,398:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,398:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,398:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,399:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,401:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,402:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,404:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,405:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,406:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,406:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,406:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,406:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,407:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,407:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,407:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,407:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,409:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,411:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,412:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,414:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,414:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,414:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,415:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,415:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,415:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,415:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,416:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,416:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,416:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,418:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,421:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,422:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,423:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,423:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,423:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,424:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,424:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,424:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,424:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,425:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,427:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,430:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,431:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,432:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,432:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,432:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,432:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,433:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,433:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,433:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,433:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,434:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,436:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,440:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,440:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,440:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,441:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,441:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,441:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,442:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,442:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,442:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,444:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,448:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,448:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,449:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,449:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,449:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,449:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,450:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,450:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,450:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,450:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,452:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,458:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,458:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,459:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,460:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,460:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,461:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,461:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,462:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,464:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,468:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,469:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,469:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,469:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,469:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,470:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,470:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,470:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,471:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,473:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,477:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,477:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,478:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,478:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,478:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,478:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,479:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,481:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,485:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,485:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,486:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,486:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,486:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,486:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,486:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,487:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,489:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,494:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,494:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,495:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,495:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,495:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,495:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,498:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,502:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,502:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,502:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,502:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,502:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,503:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,503:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,505:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,510:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,511:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,511:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,511:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,511:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,513:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,518:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,518:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,519:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,519:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,519:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,520:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,522:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,527:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,527:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,527:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,528:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,530:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,535:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,535:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,535:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,535:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,536:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,538:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,543:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,543:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,544:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,546:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,551:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,551:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,552:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,552:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,554:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,560:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,560:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,562:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,567:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,568:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,568:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,570:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,576:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,578:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,584:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-03-12 18:08:48,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,584:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-03-12 18:08:48,586:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,591:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,594:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,601:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,609:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:08:48,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-03-12 18:08:48,641:INFO:setup() successfully completed in 1.13s...............
2023-03-12 18:09:17,585:INFO:Initializing compare_models()
2023-03-12 18:09:17,585:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-03-12 18:09:17,585:INFO:Checking exceptions
2023-03-12 18:09:17,589:INFO:Preparing display monitor
2023-03-12 18:09:17,636:INFO:Initializing Naive Forecaster
2023-03-12 18:09:17,637:INFO:Total runtime is 1.6609827677408855e-05 minutes
2023-03-12 18:09:17,644:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:17,645:INFO:Initializing create_model()
2023-03-12 18:09:17,645:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:17,645:INFO:Checking exceptions
2023-03-12 18:09:17,645:INFO:Importing libraries
2023-03-12 18:09:17,646:INFO:Copying training dataset
2023-03-12 18:09:17,651:INFO:Defining folds
2023-03-12 18:09:17,652:INFO:Declaring metric variables
2023-03-12 18:09:17,659:INFO:Importing untrained model
2023-03-12 18:09:17,667:INFO:Naive Forecaster Imported successfully
2023-03-12 18:09:17,684:INFO:Starting cross validation
2023-03-12 18:09:17,687:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:09:25,284:INFO:Calculating mean and std
2023-03-12 18:09:25,286:INFO:Creating metrics dataframe
2023-03-12 18:09:25,290:INFO:Uploading results into container
2023-03-12 18:09:25,290:INFO:Uploading model into container now
2023-03-12 18:09:25,290:INFO:master_model_container: 1
2023-03-12 18:09:25,290:INFO:display_container: 2
2023-03-12 18:09:25,291:INFO:NaiveForecaster()
2023-03-12 18:09:25,291:INFO:create_model() successfully completed......................................
2023-03-12 18:09:25,397:INFO:SubProcess create_model() end ==================================
2023-03-12 18:09:25,397:INFO:Creating metrics dataframe
2023-03-12 18:09:25,406:INFO:Initializing Grand Means Forecaster
2023-03-12 18:09:25,406:INFO:Total runtime is 0.12950377066930135 minutes
2023-03-12 18:09:25,410:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:25,410:INFO:Initializing create_model()
2023-03-12 18:09:25,410:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:25,410:INFO:Checking exceptions
2023-03-12 18:09:25,410:INFO:Importing libraries
2023-03-12 18:09:25,411:INFO:Copying training dataset
2023-03-12 18:09:25,416:INFO:Defining folds
2023-03-12 18:09:25,416:INFO:Declaring metric variables
2023-03-12 18:09:25,420:INFO:Importing untrained model
2023-03-12 18:09:25,426:INFO:Grand Means Forecaster Imported successfully
2023-03-12 18:09:25,444:INFO:Starting cross validation
2023-03-12 18:09:25,446:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:09:25,570:INFO:Calculating mean and std
2023-03-12 18:09:25,572:INFO:Creating metrics dataframe
2023-03-12 18:09:25,575:INFO:Uploading results into container
2023-03-12 18:09:25,576:INFO:Uploading model into container now
2023-03-12 18:09:25,576:INFO:master_model_container: 2
2023-03-12 18:09:25,576:INFO:display_container: 2
2023-03-12 18:09:25,576:INFO:NaiveForecaster(strategy='mean')
2023-03-12 18:09:25,577:INFO:create_model() successfully completed......................................
2023-03-12 18:09:25,673:INFO:SubProcess create_model() end ==================================
2023-03-12 18:09:25,673:INFO:Creating metrics dataframe
2023-03-12 18:09:25,683:INFO:Initializing Seasonal Naive Forecaster
2023-03-12 18:09:25,684:INFO:Total runtime is 0.1341381867726644 minutes
2023-03-12 18:09:25,689:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:25,690:INFO:Initializing create_model()
2023-03-12 18:09:25,690:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:25,690:INFO:Checking exceptions
2023-03-12 18:09:25,690:INFO:Importing libraries
2023-03-12 18:09:25,690:INFO:Copying training dataset
2023-03-12 18:09:25,699:INFO:Defining folds
2023-03-12 18:09:25,700:INFO:Declaring metric variables
2023-03-12 18:09:25,705:INFO:Importing untrained model
2023-03-12 18:09:25,712:INFO:Seasonal Naive Forecaster Imported successfully
2023-03-12 18:09:25,723:INFO:Starting cross validation
2023-03-12 18:09:25,724:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:09:25,844:INFO:Calculating mean and std
2023-03-12 18:09:25,848:INFO:Creating metrics dataframe
2023-03-12 18:09:25,853:INFO:Uploading results into container
2023-03-12 18:09:25,854:INFO:Uploading model into container now
2023-03-12 18:09:25,854:INFO:master_model_container: 3
2023-03-12 18:09:25,855:INFO:display_container: 2
2023-03-12 18:09:25,855:INFO:NaiveForecaster(sp=12)
2023-03-12 18:09:25,855:INFO:create_model() successfully completed......................................
2023-03-12 18:09:25,950:INFO:SubProcess create_model() end ==================================
2023-03-12 18:09:25,950:INFO:Creating metrics dataframe
2023-03-12 18:09:25,962:INFO:Initializing Polynomial Trend Forecaster
2023-03-12 18:09:25,962:INFO:Total runtime is 0.1387631138165792 minutes
2023-03-12 18:09:25,966:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:25,966:INFO:Initializing create_model()
2023-03-12 18:09:25,966:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:25,966:INFO:Checking exceptions
2023-03-12 18:09:25,966:INFO:Importing libraries
2023-03-12 18:09:25,967:INFO:Copying training dataset
2023-03-12 18:09:25,973:INFO:Defining folds
2023-03-12 18:09:25,973:INFO:Declaring metric variables
2023-03-12 18:09:25,978:INFO:Importing untrained model
2023-03-12 18:09:25,985:INFO:Polynomial Trend Forecaster Imported successfully
2023-03-12 18:09:25,995:INFO:Starting cross validation
2023-03-12 18:09:25,997:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:09:26,095:INFO:Calculating mean and std
2023-03-12 18:09:26,097:INFO:Creating metrics dataframe
2023-03-12 18:09:26,101:INFO:Uploading results into container
2023-03-12 18:09:26,101:INFO:Uploading model into container now
2023-03-12 18:09:26,101:INFO:master_model_container: 4
2023-03-12 18:09:26,101:INFO:display_container: 2
2023-03-12 18:09:26,102:INFO:PolynomialTrendForecaster()
2023-03-12 18:09:26,102:INFO:create_model() successfully completed......................................
2023-03-12 18:09:26,197:INFO:SubProcess create_model() end ==================================
2023-03-12 18:09:26,197:INFO:Creating metrics dataframe
2023-03-12 18:09:26,210:INFO:Initializing ARIMA
2023-03-12 18:09:26,211:INFO:Total runtime is 0.142900017897288 minutes
2023-03-12 18:09:26,215:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:26,215:INFO:Initializing create_model()
2023-03-12 18:09:26,215:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:26,215:INFO:Checking exceptions
2023-03-12 18:09:26,215:INFO:Importing libraries
2023-03-12 18:09:26,216:INFO:Copying training dataset
2023-03-12 18:09:26,221:INFO:Defining folds
2023-03-12 18:09:26,221:INFO:Declaring metric variables
2023-03-12 18:09:26,226:INFO:Importing untrained model
2023-03-12 18:09:26,235:INFO:ARIMA Imported successfully
2023-03-12 18:09:26,246:INFO:Starting cross validation
2023-03-12 18:09:26,247:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:09:28,071:INFO:Calculating mean and std
2023-03-12 18:09:28,073:INFO:Creating metrics dataframe
2023-03-12 18:09:28,076:INFO:Uploading results into container
2023-03-12 18:09:28,077:INFO:Uploading model into container now
2023-03-12 18:09:28,077:INFO:master_model_container: 5
2023-03-12 18:09:28,077:INFO:display_container: 2
2023-03-12 18:09:28,077:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2023-03-12 18:09:28,077:INFO:create_model() successfully completed......................................
2023-03-12 18:09:28,172:INFO:SubProcess create_model() end ==================================
2023-03-12 18:09:28,172:INFO:Creating metrics dataframe
2023-03-12 18:09:28,183:INFO:Initializing Auto ARIMA
2023-03-12 18:09:28,184:INFO:Total runtime is 0.17579902410507203 minutes
2023-03-12 18:09:28,189:INFO:SubProcess create_model() called ==================================
2023-03-12 18:09:28,190:INFO:Initializing create_model()
2023-03-12 18:09:28,190:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:09:28,190:INFO:Checking exceptions
2023-03-12 18:09:28,190:INFO:Importing libraries
2023-03-12 18:09:28,190:INFO:Copying training dataset
2023-03-12 18:09:28,197:INFO:Defining folds
2023-03-12 18:09:28,198:INFO:Declaring metric variables
2023-03-12 18:09:28,203:INFO:Importing untrained model
2023-03-12 18:09:28,209:INFO:Auto ARIMA Imported successfully
2023-03-12 18:09:28,223:INFO:Starting cross validation
2023-03-12 18:09:28,225:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:38,494:INFO:Calculating mean and std
2023-03-12 18:10:38,496:INFO:Creating metrics dataframe
2023-03-12 18:10:38,500:INFO:Uploading results into container
2023-03-12 18:10:38,500:INFO:Uploading model into container now
2023-03-12 18:10:38,501:INFO:master_model_container: 6
2023-03-12 18:10:38,501:INFO:display_container: 2
2023-03-12 18:10:38,502:INFO:AutoARIMA(random_state=123, sp=12, suppress_warnings=True)
2023-03-12 18:10:38,502:INFO:create_model() successfully completed......................................
2023-03-12 18:10:38,609:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:38,610:INFO:Creating metrics dataframe
2023-03-12 18:10:38,622:INFO:Initializing Exponential Smoothing
2023-03-12 18:10:38,622:INFO:Total runtime is 1.3497735857963562 minutes
2023-03-12 18:10:38,626:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:38,626:INFO:Initializing create_model()
2023-03-12 18:10:38,626:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:38,626:INFO:Checking exceptions
2023-03-12 18:10:38,626:INFO:Importing libraries
2023-03-12 18:10:38,626:INFO:Copying training dataset
2023-03-12 18:10:38,632:INFO:Defining folds
2023-03-12 18:10:38,632:INFO:Declaring metric variables
2023-03-12 18:10:38,637:INFO:Importing untrained model
2023-03-12 18:10:38,644:INFO:Exponential Smoothing Imported successfully
2023-03-12 18:10:38,660:INFO:Starting cross validation
2023-03-12 18:10:38,661:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:39,185:INFO:Calculating mean and std
2023-03-12 18:10:39,187:INFO:Creating metrics dataframe
2023-03-12 18:10:39,190:INFO:Uploading results into container
2023-03-12 18:10:39,190:INFO:Uploading model into container now
2023-03-12 18:10:39,190:INFO:master_model_container: 7
2023-03-12 18:10:39,191:INFO:display_container: 2
2023-03-12 18:10:39,191:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-03-12 18:10:39,191:INFO:create_model() successfully completed......................................
2023-03-12 18:10:39,284:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:39,284:INFO:Creating metrics dataframe
2023-03-12 18:10:39,298:INFO:Initializing Croston
2023-03-12 18:10:39,298:INFO:Total runtime is 1.3610297401746114 minutes
2023-03-12 18:10:39,303:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:39,304:INFO:Initializing create_model()
2023-03-12 18:10:39,304:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:39,304:INFO:Checking exceptions
2023-03-12 18:10:39,304:INFO:Importing libraries
2023-03-12 18:10:39,304:INFO:Copying training dataset
2023-03-12 18:10:39,313:INFO:Defining folds
2023-03-12 18:10:39,313:INFO:Declaring metric variables
2023-03-12 18:10:39,320:INFO:Importing untrained model
2023-03-12 18:10:39,324:INFO:Croston Imported successfully
2023-03-12 18:10:39,337:INFO:Starting cross validation
2023-03-12 18:10:39,339:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:39,436:INFO:Calculating mean and std
2023-03-12 18:10:39,437:INFO:Creating metrics dataframe
2023-03-12 18:10:39,442:INFO:Uploading results into container
2023-03-12 18:10:39,443:INFO:Uploading model into container now
2023-03-12 18:10:39,443:INFO:master_model_container: 8
2023-03-12 18:10:39,443:INFO:display_container: 2
2023-03-12 18:10:39,444:INFO:Croston()
2023-03-12 18:10:39,444:INFO:create_model() successfully completed......................................
2023-03-12 18:10:39,540:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:39,541:INFO:Creating metrics dataframe
2023-03-12 18:10:39,554:INFO:Initializing ETS
2023-03-12 18:10:39,554:INFO:Total runtime is 1.3653016845385233 minutes
2023-03-12 18:10:39,558:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:39,558:INFO:Initializing create_model()
2023-03-12 18:10:39,558:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:39,558:INFO:Checking exceptions
2023-03-12 18:10:39,558:INFO:Importing libraries
2023-03-12 18:10:39,558:INFO:Copying training dataset
2023-03-12 18:10:39,564:INFO:Defining folds
2023-03-12 18:10:39,564:INFO:Declaring metric variables
2023-03-12 18:10:39,570:INFO:Importing untrained model
2023-03-12 18:10:39,577:INFO:ETS Imported successfully
2023-03-12 18:10:39,591:INFO:Starting cross validation
2023-03-12 18:10:39,593:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:40,247:INFO:Calculating mean and std
2023-03-12 18:10:40,249:INFO:Creating metrics dataframe
2023-03-12 18:10:40,258:INFO:Uploading results into container
2023-03-12 18:10:40,259:INFO:Uploading model into container now
2023-03-12 18:10:40,259:INFO:master_model_container: 9
2023-03-12 18:10:40,260:INFO:display_container: 2
2023-03-12 18:10:40,261:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2023-03-12 18:10:40,261:INFO:create_model() successfully completed......................................
2023-03-12 18:10:40,390:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:40,391:INFO:Creating metrics dataframe
2023-03-12 18:10:40,412:INFO:Initializing Theta Forecaster
2023-03-12 18:10:40,412:INFO:Total runtime is 1.3796074668566385 minutes
2023-03-12 18:10:40,416:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:40,417:INFO:Initializing create_model()
2023-03-12 18:10:40,418:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:40,419:INFO:Checking exceptions
2023-03-12 18:10:40,420:INFO:Importing libraries
2023-03-12 18:10:40,420:INFO:Copying training dataset
2023-03-12 18:10:40,427:INFO:Defining folds
2023-03-12 18:10:40,427:INFO:Declaring metric variables
2023-03-12 18:10:40,436:INFO:Importing untrained model
2023-03-12 18:10:40,442:INFO:Theta Forecaster Imported successfully
2023-03-12 18:10:40,456:INFO:Starting cross validation
2023-03-12 18:10:40,457:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:40,651:INFO:Calculating mean and std
2023-03-12 18:10:40,653:INFO:Creating metrics dataframe
2023-03-12 18:10:40,657:INFO:Uploading results into container
2023-03-12 18:10:40,657:INFO:Uploading model into container now
2023-03-12 18:10:40,657:INFO:master_model_container: 10
2023-03-12 18:10:40,658:INFO:display_container: 2
2023-03-12 18:10:40,658:INFO:ThetaForecaster(sp=12)
2023-03-12 18:10:40,658:INFO:create_model() successfully completed......................................
2023-03-12 18:10:40,766:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:40,766:INFO:Creating metrics dataframe
2023-03-12 18:10:40,781:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:40,781:INFO:Total runtime is 1.3857576847076416 minutes
2023-03-12 18:10:40,785:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:40,786:INFO:Initializing create_model()
2023-03-12 18:10:40,786:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:40,786:INFO:Checking exceptions
2023-03-12 18:10:40,787:INFO:Importing libraries
2023-03-12 18:10:40,787:INFO:Copying training dataset
2023-03-12 18:10:40,795:INFO:Defining folds
2023-03-12 18:10:40,795:INFO:Declaring metric variables
2023-03-12 18:10:40,799:INFO:Importing untrained model
2023-03-12 18:10:40,805:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:40,814:INFO:Starting cross validation
2023-03-12 18:10:40,816:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:41,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-12 18:10:41,649:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:10:41,650:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:10:41,654:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:10:41,690:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-12 18:10:42,365:INFO:Calculating mean and std
2023-03-12 18:10:42,366:INFO:Creating metrics dataframe
2023-03-12 18:10:42,373:INFO:Uploading results into container
2023-03-12 18:10:42,374:INFO:Uploading model into container now
2023-03-12 18:10:42,374:INFO:master_model_container: 11
2023-03-12 18:10:42,374:INFO:display_container: 2
2023-03-12 18:10:42,376:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2023-03-12 18:10:42,377:INFO:create_model() successfully completed......................................
2023-03-12 18:10:42,476:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:42,477:INFO:Creating metrics dataframe
2023-03-12 18:10:42,490:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:42,491:INFO:Total runtime is 1.414248243967692 minutes
2023-03-12 18:10:42,496:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:42,496:INFO:Initializing create_model()
2023-03-12 18:10:42,496:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:42,497:INFO:Checking exceptions
2023-03-12 18:10:42,497:INFO:Importing libraries
2023-03-12 18:10:42,497:INFO:Copying training dataset
2023-03-12 18:10:42,505:INFO:Defining folds
2023-03-12 18:10:42,505:INFO:Declaring metric variables
2023-03-12 18:10:42,510:INFO:Importing untrained model
2023-03-12 18:10:42,519:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:42,530:INFO:Starting cross validation
2023-03-12 18:10:42,532:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:43,197:INFO:Calculating mean and std
2023-03-12 18:10:43,198:INFO:Creating metrics dataframe
2023-03-12 18:10:43,202:INFO:Uploading results into container
2023-03-12 18:10:43,202:INFO:Uploading model into container now
2023-03-12 18:10:43,202:INFO:master_model_container: 12
2023-03-12 18:10:43,202:INFO:display_container: 2
2023-03-12 18:10:43,205:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=123), sp=12,
                    window_length=12)
2023-03-12 18:10:43,205:INFO:create_model() successfully completed......................................
2023-03-12 18:10:43,301:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:43,301:INFO:Creating metrics dataframe
2023-03-12 18:10:43,318:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:43,318:INFO:Total runtime is 1.4280446449915567 minutes
2023-03-12 18:10:43,323:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:43,324:INFO:Initializing create_model()
2023-03-12 18:10:43,324:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:43,324:INFO:Checking exceptions
2023-03-12 18:10:43,324:INFO:Importing libraries
2023-03-12 18:10:43,324:INFO:Copying training dataset
2023-03-12 18:10:43,331:INFO:Defining folds
2023-03-12 18:10:43,331:INFO:Declaring metric variables
2023-03-12 18:10:43,335:INFO:Importing untrained model
2023-03-12 18:10:43,342:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:43,354:INFO:Starting cross validation
2023-03-12 18:10:43,356:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:44,040:INFO:Calculating mean and std
2023-03-12 18:10:44,042:INFO:Creating metrics dataframe
2023-03-12 18:10:44,045:INFO:Uploading results into container
2023-03-12 18:10:44,045:INFO:Uploading model into container now
2023-03-12 18:10:44,045:INFO:master_model_container: 13
2023-03-12 18:10:44,045:INFO:display_container: 2
2023-03-12 18:10:44,047:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=123), sp=12, window_length=12)
2023-03-12 18:10:44,047:INFO:create_model() successfully completed......................................
2023-03-12 18:10:44,148:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:44,148:INFO:Creating metrics dataframe
2023-03-12 18:10:44,163:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:44,163:INFO:Total runtime is 1.4421236634254455 minutes
2023-03-12 18:10:44,168:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:44,168:INFO:Initializing create_model()
2023-03-12 18:10:44,168:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:44,169:INFO:Checking exceptions
2023-03-12 18:10:44,169:INFO:Importing libraries
2023-03-12 18:10:44,169:INFO:Copying training dataset
2023-03-12 18:10:44,176:INFO:Defining folds
2023-03-12 18:10:44,176:INFO:Declaring metric variables
2023-03-12 18:10:44,180:INFO:Importing untrained model
2023-03-12 18:10:44,188:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:44,198:INFO:Starting cross validation
2023-03-12 18:10:44,200:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:45,008:INFO:Calculating mean and std
2023-03-12 18:10:45,010:INFO:Creating metrics dataframe
2023-03-12 18:10:45,013:INFO:Uploading results into container
2023-03-12 18:10:45,013:INFO:Uploading model into container now
2023-03-12 18:10:45,014:INFO:master_model_container: 14
2023-03-12 18:10:45,014:INFO:display_container: 2
2023-03-12 18:10:45,016:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=123), sp=12, window_length=12)
2023-03-12 18:10:45,016:INFO:create_model() successfully completed......................................
2023-03-12 18:10:45,114:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:45,114:INFO:Creating metrics dataframe
2023-03-12 18:10:45,130:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:45,131:INFO:Total runtime is 1.4582472244898477 minutes
2023-03-12 18:10:45,136:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:45,136:INFO:Initializing create_model()
2023-03-12 18:10:45,136:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:45,136:INFO:Checking exceptions
2023-03-12 18:10:45,137:INFO:Importing libraries
2023-03-12 18:10:45,137:INFO:Copying training dataset
2023-03-12 18:10:45,144:INFO:Defining folds
2023-03-12 18:10:45,144:INFO:Declaring metric variables
2023-03-12 18:10:45,149:INFO:Importing untrained model
2023-03-12 18:10:45,158:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:45,167:INFO:Starting cross validation
2023-03-12 18:10:45,168:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:45,384:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:45,389:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:45,390:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:45,438:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:45,702:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:45,807:INFO:Calculating mean and std
2023-03-12 18:10:45,808:INFO:Creating metrics dataframe
2023-03-12 18:10:45,812:INFO:Uploading results into container
2023-03-12 18:10:45,812:INFO:Uploading model into container now
2023-03-12 18:10:45,812:INFO:master_model_container: 15
2023-03-12 18:10:45,812:INFO:display_container: 2
2023-03-12 18:10:45,815:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=123), sp=12, window_length=12)
2023-03-12 18:10:45,815:INFO:create_model() successfully completed......................................
2023-03-12 18:10:45,913:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:45,913:INFO:Creating metrics dataframe
2023-03-12 18:10:45,929:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:45,929:INFO:Total runtime is 1.4715616544087726 minutes
2023-03-12 18:10:45,933:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:45,933:INFO:Initializing create_model()
2023-03-12 18:10:45,933:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:45,933:INFO:Checking exceptions
2023-03-12 18:10:45,933:INFO:Importing libraries
2023-03-12 18:10:45,933:INFO:Copying training dataset
2023-03-12 18:10:45,941:INFO:Defining folds
2023-03-12 18:10:45,941:INFO:Declaring metric variables
2023-03-12 18:10:45,946:INFO:Importing untrained model
2023-03-12 18:10:45,955:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:45,964:INFO:Starting cross validation
2023-03-12 18:10:45,966:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:46,183:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 18:10:46,189:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 18:10:46,193:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 18:10:46,200:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 18:10:46,488:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-03-12 18:10:46,595:INFO:Calculating mean and std
2023-03-12 18:10:46,596:INFO:Creating metrics dataframe
2023-03-12 18:10:46,600:INFO:Uploading results into container
2023-03-12 18:10:46,600:INFO:Uploading model into container now
2023-03-12 18:10:46,600:INFO:master_model_container: 16
2023-03-12 18:10:46,600:INFO:display_container: 2
2023-03-12 18:10:46,603:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=123), sp=12,
                    window_length=12)
2023-03-12 18:10:46,603:INFO:create_model() successfully completed......................................
2023-03-12 18:10:46,698:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:46,699:INFO:Creating metrics dataframe
2023-03-12 18:10:46,714:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:46,714:INFO:Total runtime is 1.4846439242362974 minutes
2023-03-12 18:10:46,719:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:46,720:INFO:Initializing create_model()
2023-03-12 18:10:46,720:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:46,720:INFO:Checking exceptions
2023-03-12 18:10:46,720:INFO:Importing libraries
2023-03-12 18:10:46,720:INFO:Copying training dataset
2023-03-12 18:10:46,727:INFO:Defining folds
2023-03-12 18:10:46,727:INFO:Declaring metric variables
2023-03-12 18:10:46,730:INFO:Importing untrained model
2023-03-12 18:10:46,736:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:46,745:INFO:Starting cross validation
2023-03-12 18:10:46,747:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:47,423:INFO:Calculating mean and std
2023-03-12 18:10:47,423:INFO:Creating metrics dataframe
2023-03-12 18:10:47,427:INFO:Uploading results into container
2023-03-12 18:10:47,427:INFO:Uploading model into container now
2023-03-12 18:10:47,427:INFO:master_model_container: 17
2023-03-12 18:10:47,428:INFO:display_container: 2
2023-03-12 18:10:47,432:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=12, window_length=12)
2023-03-12 18:10:47,432:INFO:create_model() successfully completed......................................
2023-03-12 18:10:47,529:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:47,529:INFO:Creating metrics dataframe
2023-03-12 18:10:47,544:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:47,544:INFO:Total runtime is 1.4984723170598346 minutes
2023-03-12 18:10:47,547:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:47,548:INFO:Initializing create_model()
2023-03-12 18:10:47,548:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:47,548:INFO:Checking exceptions
2023-03-12 18:10:47,548:INFO:Importing libraries
2023-03-12 18:10:47,548:INFO:Copying training dataset
2023-03-12 18:10:47,554:INFO:Defining folds
2023-03-12 18:10:47,555:INFO:Declaring metric variables
2023-03-12 18:10:47,560:INFO:Importing untrained model
2023-03-12 18:10:47,570:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:47,581:INFO:Starting cross validation
2023-03-12 18:10:47,583:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:48,402:INFO:Calculating mean and std
2023-03-12 18:10:48,403:INFO:Creating metrics dataframe
2023-03-12 18:10:48,407:INFO:Uploading results into container
2023-03-12 18:10:48,407:INFO:Uploading model into container now
2023-03-12 18:10:48,408:INFO:master_model_container: 18
2023-03-12 18:10:48,408:INFO:display_container: 2
2023-03-12 18:10:48,410:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=12, window_length=12)
2023-03-12 18:10:48,410:INFO:create_model() successfully completed......................................
2023-03-12 18:10:48,504:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:48,504:INFO:Creating metrics dataframe
2023-03-12 18:10:48,523:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:48,524:INFO:Total runtime is 1.5147955218950906 minutes
2023-03-12 18:10:48,529:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:48,529:INFO:Initializing create_model()
2023-03-12 18:10:48,529:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:48,530:INFO:Checking exceptions
2023-03-12 18:10:48,530:INFO:Importing libraries
2023-03-12 18:10:48,530:INFO:Copying training dataset
2023-03-12 18:10:48,537:INFO:Defining folds
2023-03-12 18:10:48,538:INFO:Declaring metric variables
2023-03-12 18:10:48,542:INFO:Importing untrained model
2023-03-12 18:10:48,547:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:48,559:INFO:Starting cross validation
2023-03-12 18:10:48,561:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:49,177:INFO:Calculating mean and std
2023-03-12 18:10:49,178:INFO:Creating metrics dataframe
2023-03-12 18:10:49,182:INFO:Uploading results into container
2023-03-12 18:10:49,182:INFO:Uploading model into container now
2023-03-12 18:10:49,183:INFO:master_model_container: 19
2023-03-12 18:10:49,183:INFO:display_container: 2
2023-03-12 18:10:49,186:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=123),
                    sp=12, window_length=12)
2023-03-12 18:10:49,186:INFO:create_model() successfully completed......................................
2023-03-12 18:10:49,284:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:49,285:INFO:Creating metrics dataframe
2023-03-12 18:10:49,304:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:49,304:INFO:Total runtime is 1.5278107086817423 minutes
2023-03-12 18:10:49,309:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:49,310:INFO:Initializing create_model()
2023-03-12 18:10:49,310:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:49,310:INFO:Checking exceptions
2023-03-12 18:10:49,310:INFO:Importing libraries
2023-03-12 18:10:49,310:INFO:Copying training dataset
2023-03-12 18:10:49,318:INFO:Defining folds
2023-03-12 18:10:49,318:INFO:Declaring metric variables
2023-03-12 18:10:49,324:INFO:Importing untrained model
2023-03-12 18:10:49,330:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:49,344:INFO:Starting cross validation
2023-03-12 18:10:49,345:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:49,541:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:49,542:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:49,542:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:49,579:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:49,844:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-03-12 18:10:49,950:INFO:Calculating mean and std
2023-03-12 18:10:49,952:INFO:Creating metrics dataframe
2023-03-12 18:10:49,956:INFO:Uploading results into container
2023-03-12 18:10:49,956:INFO:Uploading model into container now
2023-03-12 18:10:49,956:INFO:master_model_container: 20
2023-03-12 18:10:49,956:INFO:display_container: 2
2023-03-12 18:10:49,958:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2023-03-12 18:10:49,958:INFO:create_model() successfully completed......................................
2023-03-12 18:10:50,052:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:50,052:INFO:Creating metrics dataframe
2023-03-12 18:10:50,070:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:50,070:INFO:Total runtime is 1.5405765851338704 minutes
2023-03-12 18:10:50,075:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:50,075:INFO:Initializing create_model()
2023-03-12 18:10:50,075:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:50,075:INFO:Checking exceptions
2023-03-12 18:10:50,075:INFO:Importing libraries
2023-03-12 18:10:50,075:INFO:Copying training dataset
2023-03-12 18:10:50,082:INFO:Defining folds
2023-03-12 18:10:50,083:INFO:Declaring metric variables
2023-03-12 18:10:50,089:INFO:Importing untrained model
2023-03-12 18:10:50,095:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:50,108:INFO:Starting cross validation
2023-03-12 18:10:50,110:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:50,814:INFO:Calculating mean and std
2023-03-12 18:10:50,815:INFO:Creating metrics dataframe
2023-03-12 18:10:50,824:INFO:Uploading results into container
2023-03-12 18:10:50,825:INFO:Uploading model into container now
2023-03-12 18:10:50,825:INFO:master_model_container: 21
2023-03-12 18:10:50,825:INFO:display_container: 2
2023-03-12 18:10:50,830:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2023-03-12 18:10:50,830:INFO:create_model() successfully completed......................................
2023-03-12 18:10:50,936:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:50,936:INFO:Creating metrics dataframe
2023-03-12 18:10:50,953:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:50,954:INFO:Total runtime is 1.555297331015269 minutes
2023-03-12 18:10:50,961:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:50,962:INFO:Initializing create_model()
2023-03-12 18:10:50,962:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:50,962:INFO:Checking exceptions
2023-03-12 18:10:50,962:INFO:Importing libraries
2023-03-12 18:10:50,962:INFO:Copying training dataset
2023-03-12 18:10:50,972:INFO:Defining folds
2023-03-12 18:10:50,972:INFO:Declaring metric variables
2023-03-12 18:10:50,980:INFO:Importing untrained model
2023-03-12 18:10:50,989:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:51,002:INFO:Starting cross validation
2023-03-12 18:10:51,004:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:51,734:INFO:Calculating mean and std
2023-03-12 18:10:51,736:INFO:Creating metrics dataframe
2023-03-12 18:10:51,742:INFO:Uploading results into container
2023-03-12 18:10:51,742:INFO:Uploading model into container now
2023-03-12 18:10:51,743:INFO:master_model_container: 22
2023-03-12 18:10:51,743:INFO:display_container: 2
2023-03-12 18:10:51,745:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=123), sp=12,
                    window_length=12)
2023-03-12 18:10:51,746:INFO:create_model() successfully completed......................................
2023-03-12 18:10:51,850:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:51,851:INFO:Creating metrics dataframe
2023-03-12 18:10:51,871:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:51,871:INFO:Total runtime is 1.570582091808319 minutes
2023-03-12 18:10:51,875:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:51,875:INFO:Initializing create_model()
2023-03-12 18:10:51,875:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:51,875:INFO:Checking exceptions
2023-03-12 18:10:51,875:INFO:Importing libraries
2023-03-12 18:10:51,876:INFO:Copying training dataset
2023-03-12 18:10:51,884:INFO:Defining folds
2023-03-12 18:10:51,884:INFO:Declaring metric variables
2023-03-12 18:10:51,892:INFO:Importing untrained model
2023-03-12 18:10:51,900:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:51,913:INFO:Starting cross validation
2023-03-12 18:10:51,916:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:53,038:INFO:Calculating mean and std
2023-03-12 18:10:53,039:INFO:Creating metrics dataframe
2023-03-12 18:10:53,043:INFO:Uploading results into container
2023-03-12 18:10:53,043:INFO:Uploading model into container now
2023-03-12 18:10:53,043:INFO:master_model_container: 23
2023-03-12 18:10:53,043:INFO:display_container: 2
2023-03-12 18:10:53,046:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=123),
                    sp=12, window_length=12)
2023-03-12 18:10:53,046:INFO:create_model() successfully completed......................................
2023-03-12 18:10:53,140:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:53,140:INFO:Creating metrics dataframe
2023-03-12 18:10:53,163:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:53,163:INFO:Total runtime is 1.5921132246653238 minutes
2023-03-12 18:10:53,166:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:53,167:INFO:Initializing create_model()
2023-03-12 18:10:53,167:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:53,167:INFO:Checking exceptions
2023-03-12 18:10:53,167:INFO:Importing libraries
2023-03-12 18:10:53,167:INFO:Copying training dataset
2023-03-12 18:10:53,175:INFO:Defining folds
2023-03-12 18:10:53,175:INFO:Declaring metric variables
2023-03-12 18:10:53,181:INFO:Importing untrained model
2023-03-12 18:10:53,187:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:53,198:INFO:Starting cross validation
2023-03-12 18:10:53,199:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:54,473:INFO:Calculating mean and std
2023-03-12 18:10:54,474:INFO:Creating metrics dataframe
2023-03-12 18:10:54,478:INFO:Uploading results into container
2023-03-12 18:10:54,478:INFO:Uploading model into container now
2023-03-12 18:10:54,479:INFO:master_model_container: 24
2023-03-12 18:10:54,479:INFO:display_container: 2
2023-03-12 18:10:54,482:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=123),
                    sp=12, window_length=12)
2023-03-12 18:10:54,482:INFO:create_model() successfully completed......................................
2023-03-12 18:10:54,581:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:54,581:INFO:Creating metrics dataframe
2023-03-12 18:10:54,598:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:54,598:INFO:Total runtime is 1.616036836306254 minutes
2023-03-12 18:10:54,601:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:54,602:INFO:Initializing create_model()
2023-03-12 18:10:54,602:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:54,602:INFO:Checking exceptions
2023-03-12 18:10:54,602:INFO:Importing libraries
2023-03-12 18:10:54,603:INFO:Copying training dataset
2023-03-12 18:10:54,610:INFO:Defining folds
2023-03-12 18:10:54,610:INFO:Declaring metric variables
2023-03-12 18:10:54,615:INFO:Importing untrained model
2023-03-12 18:10:54,622:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:54,631:INFO:Starting cross validation
2023-03-12 18:10:54,632:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:55,480:INFO:Calculating mean and std
2023-03-12 18:10:55,482:INFO:Creating metrics dataframe
2023-03-12 18:10:55,488:INFO:Uploading results into container
2023-03-12 18:10:55,488:INFO:Uploading model into container now
2023-03-12 18:10:55,488:INFO:master_model_container: 25
2023-03-12 18:10:55,488:INFO:display_container: 2
2023-03-12 18:10:55,492:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=123),
                    sp=12, window_length=12)
2023-03-12 18:10:55,492:INFO:create_model() successfully completed......................................
2023-03-12 18:10:55,594:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:55,594:INFO:Creating metrics dataframe
2023-03-12 18:10:55,614:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:55,614:INFO:Total runtime is 1.632971672217051 minutes
2023-03-12 18:10:55,621:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:55,621:INFO:Initializing create_model()
2023-03-12 18:10:55,621:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:55,622:INFO:Checking exceptions
2023-03-12 18:10:55,622:INFO:Importing libraries
2023-03-12 18:10:55,622:INFO:Copying training dataset
2023-03-12 18:10:55,628:INFO:Defining folds
2023-03-12 18:10:55,628:INFO:Declaring metric variables
2023-03-12 18:10:55,632:INFO:Importing untrained model
2023-03-12 18:10:55,640:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:55,650:INFO:Starting cross validation
2023-03-12 18:10:55,653:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:56,815:INFO:Calculating mean and std
2023-03-12 18:10:56,816:INFO:Creating metrics dataframe
2023-03-12 18:10:56,822:INFO:Uploading results into container
2023-03-12 18:10:56,822:INFO:Uploading model into container now
2023-03-12 18:10:56,823:INFO:master_model_container: 26
2023-03-12 18:10:56,823:INFO:display_container: 2
2023-03-12 18:10:56,826:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=123), sp=12,
                    window_length=12)
2023-03-12 18:10:56,827:INFO:create_model() successfully completed......................................
2023-03-12 18:10:56,927:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:56,928:INFO:Creating metrics dataframe
2023-03-12 18:10:56,947:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-03-12 18:10:56,947:INFO:Total runtime is 1.6551892360051472 minutes
2023-03-12 18:10:56,951:INFO:SubProcess create_model() called ==================================
2023-03-12 18:10:56,951:INFO:Initializing create_model()
2023-03-12 18:10:56,951:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000259A0829CD0>, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:56,951:INFO:Checking exceptions
2023-03-12 18:10:56,952:INFO:Importing libraries
2023-03-12 18:10:56,952:INFO:Copying training dataset
2023-03-12 18:10:56,960:INFO:Defining folds
2023-03-12 18:10:56,960:INFO:Declaring metric variables
2023-03-12 18:10:56,965:INFO:Importing untrained model
2023-03-12 18:10:56,970:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-03-12 18:10:56,980:INFO:Starting cross validation
2023-03-12 18:10:56,982:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3], dtype='int64', is_relative=True),
                        initial_window=126, step_length=3), n_jobs=-1
2023-03-12 18:10:57,944:INFO:Calculating mean and std
2023-03-12 18:10:57,945:INFO:Creating metrics dataframe
2023-03-12 18:10:57,949:INFO:Uploading results into container
2023-03-12 18:10:57,949:INFO:Uploading model into container now
2023-03-12 18:10:57,949:INFO:master_model_container: 27
2023-03-12 18:10:57,949:INFO:display_container: 2
2023-03-12 18:10:57,951:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [12, 11,
                                                                        10, 9,
                                                                        8, 7, 6,
                                                                        5, 4, 3,
                                                                        2, 1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=123), sp=12,
                    window_length=12)
2023-03-12 18:10:57,952:INFO:create_model() successfully completed......................................
2023-03-12 18:10:58,056:INFO:SubProcess create_model() end ==================================
2023-03-12 18:10:58,056:INFO:Creating metrics dataframe
2023-03-12 18:10:58,090:INFO:Initializing create_model()
2023-03-12 18:10:58,091:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-12 18:10:58,091:INFO:Checking exceptions
2023-03-12 18:10:58,093:INFO:Importing libraries
2023-03-12 18:10:58,093:INFO:Copying training dataset
2023-03-12 18:10:58,099:INFO:Defining folds
2023-03-12 18:10:58,099:INFO:Declaring metric variables
2023-03-12 18:10:58,099:INFO:Importing untrained model
2023-03-12 18:10:58,099:INFO:Declaring custom model
2023-03-12 18:10:58,101:INFO:Exponential Smoothing Imported successfully
2023-03-12 18:10:58,101:INFO:Cross validation set to False
2023-03-12 18:10:58,101:INFO:Fitting Model
2023-03-12 18:10:58,268:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-03-12 18:10:58,268:INFO:create_model() successfully completed......................................
2023-03-12 18:10:58,430:INFO:master_model_container: 27
2023-03-12 18:10:58,430:INFO:display_container: 2
2023-03-12 18:10:58,431:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-03-12 18:10:58,431:INFO:compare_models() successfully completed......................................
2023-03-12 18:11:29,122:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-03-12 18:11:31,020:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:11:31,020:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:11:31,022:INFO:Visual Rendered Successfully
2023-03-12 18:11:34,773:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-03-12 18:11:35,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:11:35,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 18:11:35,951:INFO:Visual Rendered Successfully
2023-03-12 18:11:50,793:INFO:Initializing finalize_model()
2023-03-12 18:11:50,793:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-03-12 18:11:50,794:INFO:Finalizing ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2023-03-12 18:11:50,798:INFO:Initializing create_model()
2023-03-12 18:11:50,798:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000259A0829FD0>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-03-12 18:11:50,799:INFO:Checking exceptions
2023-03-12 18:11:50,801:INFO:Importing libraries
2023-03-12 18:11:50,801:INFO:Copying training dataset
2023-03-12 18:11:50,804:INFO:Defining folds
2023-03-12 18:11:50,804:INFO:Declaring metric variables
2023-03-12 18:11:50,804:INFO:Importing untrained model
2023-03-12 18:11:50,804:INFO:Declaring custom model
2023-03-12 18:11:50,805:INFO:Exponential Smoothing Imported successfully
2023-03-12 18:11:50,805:INFO:Cross validation set to False
2023-03-12 18:11:50,805:INFO:Fitting Model
2023-03-12 18:11:50,996:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))])
2023-03-12 18:11:50,996:INFO:create_model() successfully completed......................................
2023-03-12 18:11:51,110:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-03-12 18:11:51,204:INFO:display_container: 5
2023-03-12 18:11:51,204:INFO:master_model_container: 27
2023-03-12 18:11:51,204:INFO:display_container: 5
2023-03-12 18:11:51,209:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))])
2023-03-12 18:11:51,209:INFO:finalize_model() successfully completed......................................
2023-03-12 18:11:51,329:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-03-12 18:11:53,103:INFO:Initializing save_model()
2023-03-12 18:11:53,103:INFO:save_model(model=ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))]), model_name=ts_model, prep_pipe_=None, verbose=True, use_case=MLUsecase.TIME_SERIES, kwargs={})
2023-03-12 18:11:53,103:INFO:Adding model into prep_pipe
2023-03-12 18:11:53,105:WARNING:Only Model saved. Transformations in prep_pipe are ignored.
2023-03-12 18:11:53,113:INFO:ts_model.pkl saved in current working directory
2023-03-12 18:11:53,118:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ExponentialSmoothing(seasonal='mul',
                                                                                     sp=12,
                                                                                     trend='add'))]))])
2023-03-12 18:11:53,119:INFO:save_model() successfully completed......................................
2023-03-12 18:11:55,995:INFO:Initializing load_model()
2023-03-12 18:11:55,995:INFO:load_model(model_name=ts_model, platform=None, authentication=None, verbose=True)
2023-03-12 22:32:53,706:INFO:Soft dependency imported: mlxtend: 0.21.0
2023-03-12 22:32:54,331:WARNING:C:\Users\du\AppData\Roaming\Python\Python39\site-packages\mlxtend\frequent_patterns\fpcommon.py:111: DeprecationWarning: DataFrames with non-bool types result in worse computationalperformance and their support might be discontinued in the future.Please use a DataFrame with bool type
  warnings.warn(

2023-03-12 22:32:57,652:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\xarray\core\pycompat.py:22: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  duck_array_version = LooseVersion(duck_array_module.__version__)

2023-03-12 22:32:57,903:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\xarray\core\pycompat.py:37: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  duck_array_version = LooseVersion("0.0.0")

2023-03-12 22:32:57,905:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\xarray\core\pycompat.py:37: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  duck_array_version = LooseVersion("0.0.0")

2023-03-12 22:32:58,056:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2023-03-12 22:32:58,056:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2023-03-12 22:32:58,152:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\xarray\core\npcompat.py:82: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  if LooseVersion(np.__version__) >= "1.20.0":

2023-03-12 22:32:58,152:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2023-03-12 22:32:58,174:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\xarray\core\pdcompat.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  if LooseVersion(pd.__version__) < "0.25.0":

2023-03-12 22:32:58,174:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2023-03-12 22:33:05,459:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


2023-03-12 22:33:05,459:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\plotly\io\_renderers.py:395: DeprecationWarning:

distutils Version classes are deprecated. Use packaging.version instead.


